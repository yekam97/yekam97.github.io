/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./style.css":
/*!*************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./style.css ***!
  \*************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* Modernized stylesheet for portfolio\\r\\n   - Variables: palette, typography scale\\r\\n   - Clean layout for header, hero (70/30), roles tabs, cards\\r\\n   - Smooth microinteractions and accessible focus\\r\\n*/\\r\\n:root{\\r\\n  /* Paleta de Colores */\\r\\n  --color-primary: #111111;\\r\\n  --color-secondary: #6C63FF;\\r\\n  --color-accent-alt: #FF7849;\\r\\n  --color-neutral-light: #EAEAEA;\\r\\n  --color-neutral-dark: #BFBFBF;\\r\\n  --color-bg: #fafafa;\\r\\n  --color-text: #111111;\\r\\n\\r\\n  /* Tipograf√≠a */\\r\\n  --ff-heading: \\\"Space Grotesk\\\", \\\"Satoshi\\\", system-ui, sans-serif;\\r\\n  --ff-body: \\\"Manrope\\\", \\\"Inter\\\", system-ui, sans-serif;\\r\\n\\r\\n  /* Estilos y espaciado */\\r\\n  --maxw: 1100px;\\r\\n  --radius: 12px;\\r\\n  --shadow-soft: 0 4px 20px rgba(0,0,0,0.05);\\r\\n  --transition: 320ms cubic-bezier(.2,.9,.3,1);\\r\\n  /* typographic scale */\\r\\n  --step--1: 12px;\\r\\n  --step-0: 14px;\\r\\n  --step-1: 16px;\\r\\n  --step-2: 20px;\\r\\n  --step-3: 26px;\\r\\n  --step-4: 34px;\\r\\n  --lead: 18px;\\r\\n}\\r\\n\\r\\n/* Base */\\r\\n*{box-sizing:border-box}\\r\\nhtml{font-family:var(--ff-body); font-size:16px; scroll-behavior: smooth;}\\r\\nbody{height:100%; margin:0; color:var(--color-text); background-color: var(--color-bg); font-size:var(--step-1); line-height:1.6}\\r\\na,button{font-family:inherit}\\r\\nimg{max-width:100%; display:block}\\r\\n.wrap{max-width:var(--maxw); margin:0 auto; padding: 0 2rem}\\r\\n\\r\\nh1, h2, h3, h4, h5, h6 {\\r\\n  font-family: var(--ff-heading);\\r\\n  font-weight: 700;\\r\\n  letter-spacing: -0.02em;\\r\\n}\\r\\n\\r\\n/* Header */\\r\\n.site-header{position:-webkit-sticky;position:sticky; top:1rem; -webkit-backdrop-filter: blur(10px); backdrop-filter: blur(10px); background:rgba(255,255,255,0.8); border-radius:var(--radius); border:1px solid var(--color-neutral-light); padding:1rem 1.5rem; display:flex; align-items:center; justify-content:space-between; z-index:60; transition: transform 0.3s ease-out; width: calc(100% - 2rem); max-width: var(--maxw); margin: 1rem auto;}\\r\\n.site-header:not(.visible) { transform: translateY(-120%); }\\r\\n.brand{display:flex; gap:14px; align-items:center}\\r\\n.logo-mark{width:48px; height:48px; border-radius: 50%; background:var(--color-secondary); display:flex; align-items:center; justify-content:center; color:white; font-weight:700; font-size:18px; font-family: var(--ff-heading);}\\r\\n.brand h1{font-size:15px; margin:0}\\r\\n.brand p{margin:0; font-size:13px; color:var(--muted)}\\r\\nnav.primary{display:flex; gap:12px; align-items:center}\\r\\n.nav.primary{align-items:center}\\r\\n.nav.primary a{font-size:13px; padding:6px 8px; border-radius:8px; text-transform:uppercase; letter-spacing:1px; font-weight:600}\\r\\n.nav.primary a::after{content:''; display:block; height:2px; width:0; background:var(--accent); transition:width 260ms var(--transition); margin-top:6px; border-radius:2px}\\r\\n.nav.primary a:hover::after{width:100%}\\r\\n.nav.primary a:hover{background:transparent; color: var(--color-secondary);}\\r\\n.cta{background:var(--color-secondary); color:white; padding:9px 14px; border-radius:10px; font-weight:700; transition: background-color 0.3s ease;}\\r\\n.cta:hover { background-color: var(--color-accent-alt); }\\r\\n\\r\\n/* Hero / Slider */\\r\\n.hero{display:grid; grid-template-columns:70% 30%; grid-gap:20px; gap:20px; margin-top:20px; align-items:start}\\r\\n.hero-card{background:transparent; padding:26px; border-radius:var(--radius); }\\r\\n.hero-card{padding:40px 42px}\\r\\n.hero-title{font-size:42px; margin:0 0 12px 0; font-weight:800; letter-spacing:-0.02em}\\r\\n.lead{font-size:18px; color:var(--muted); margin:0 0 18px 0; max-width:66ch}\\r\\n.hero .chips{margin-top:18px}\\r\\n.chips{display:flex; gap:8px; flex-wrap:wrap; margin-top:8px}\\r\\n.chip{background:var(--color-neutral-light); border:1px solid transparent; padding:6px 12px; border-radius:999px; font-size:13px; color:var(--color-text)}\\r\\n\\r\\n.slider-wrap{background:var(--card); padding:22px; border-radius:var(--radius); border:1px solid rgba(11,37,64,0.04); box-shadow:var(--card-elev)}\\r\\n.slider{display:flex; gap:14px; align-items:center; overflow:hidden; position:relative}\\r\\n.slides{display:flex; transition:transform 520ms cubic-bezier(.2,.9,.3,1)}\\r\\n.card-slide{min-width:320px; max-width:460px; background:var(--card); border-radius:12px; padding:18px; box-shadow:var(--card-elev); border:1px solid rgba(11,37,64,0.03); display:flex; flex-direction:column; gap:10px; transition:transform var(--transition), box-shadow var(--transition)}\\r\\n.card-slide:hover{transform:translateY(-6px); box-shadow:0 18px 40px rgba(11,37,64,0.09)}\\r\\n.card-slide{will-change:transform}\\r\\n.card-slide h3{margin:0;font-size:16px}\\r\\n.card-slide p{margin:0;color:var(--muted);font-size:14px}\\r\\n.card-actions{margin-top:auto; display:flex; gap:8px}\\r\\n.btn{padding:9px 14px;border-radius:10px;border:0;font-weight:700;cursor:pointer; transition:all var(--transition)}\\r\\n.btn-primary{background:var(--accent); color:white; box-shadow:0 8px 20px rgba(11,107,255,0.12)}\\r\\n.btn-outline{background:white;border:1px solid rgba(11,37,64,0.04);color:var(--accent-2)}\\r\\n\\r\\n.nav-controls{display:flex; align-items:center; gap:8px}\\r\\n.nav-controls button{background:white;border:1px solid rgba(11,37,64,0.04);padding:8px;border-radius:10px;cursor:pointer; transition:all var(--transition)}\\r\\n.nav-controls button:hover{transform:translateY(-2px)}\\r\\n\\r\\n/* Dots */\\r\\n.dots{display:flex; gap:8px; margin-left:12px}\\r\\n.dot{width:10px;height:10px;border-radius:50%;background:linear-gradient(90deg,#e9f2ff,#f0f9f8)}\\r\\n.dot.active{background:var(--accent)}\\r\\n\\r\\n/* Content & Panels */\\r\\n#content-area{margin-top:20px; display:grid; grid-template-columns:1fr; grid-gap:14px; gap:14px}\\r\\n.panel{background:white; padding:2rem; border-radius:var(--radius); box-shadow: var(--shadow-soft); display:none}\\r\\n.panel.active{display:block}\\r\\n.cards-grid{display:grid; grid-template-columns:repeat(2,1fr); grid-gap:14px; gap:14px}\\r\\n.project-card{background:white;border-radius:10px;padding:12px;border:1px solid #eef4fb}\\r\\n\\r\\n/* Sidebar */\\r\\n.side{display:flex; flex-direction:column; gap:14px}\\r\\n.card{background:white; padding:2rem; border-radius:var(--radius); box-shadow: var(--shadow-soft);}\\r\\n\\r\\n/* Roles / Tabs section */\\r\\n.roles-tabs{margin-top:14px}\\r\\n.roles-nav{display:flex; gap:8px; flex-wrap:wrap; margin-bottom:14px}\\r\\n.role-tab{background:transparent; border:1px solid var(--color-neutral-light); padding:8px 12px; border-radius:10px; cursor:pointer; font-weight:700; display:inline-flex; align-items:center; gap:8px; transition:all var(--transition)}\\r\\n.role-tab .icon{font-size:18px; opacity:0.95}\\r\\n.role-tab .label{font-weight:700}\\r\\n.role-tab:hover{transform:translateY(-3px)}\\r\\n.role-tab.active{background:linear-gradient(90deg,var(--accent),var(--accent-3)); color:white; box-shadow:0 12px 30px rgba(11,37,64,0.08)}\\r\\n.role-tab:focus{outline:3px solid rgba(11,107,255,0.12); outline-offset:3px}\\r\\n\\r\\n/* SVG icon color & size */\\r\\n.role-tab svg.icon{width:18px; height:18px; color:var(--muted); transition:color var(--transition), transform var(--transition)}\\r\\n.role-tab:hover svg.icon{transform:translateY(-2px)}\\r\\n.role-tab.active svg.icon{color:rgba(255,255,255,0.95)}\\r\\n\\r\\n/* hide labels on very small screens to save space */\\r\\n@media (max-width:520px){\\r\\n  .role-tab .label{display:none}\\r\\n}\\r\\n\\r\\n.roles-panels{position:relative; min-height:200px; background: white; border-radius: var(--radius); padding: 2rem; box-shadow: var(--shadow-soft);}\\r\\n.role-panel{position:absolute; inset:0; opacity:0; transform:translateY(8px); transition:all 320ms cubic-bezier(.2,.9,.3,1); pointer-events:none}\\r\\n.role-panel.active{opacity:1; transform:none; pointer-events:auto; position:relative}\\r\\n.role-content{display:grid; grid-template-columns:1fr; grid-gap:16px; gap:16px}\\r\\n.role-hero{display:flex; flex-direction:column; gap:8px}\\r\\n.projects-list{display:grid; grid-template-columns:repeat(3,1fr); grid-gap:12px; gap:12px}\\r\\n.project-card-small{background:var(--card); border-radius:10px; padding:10px; border:1px solid rgba(11,37,64,0.04)}\\r\\n.project-card-small{position:relative; overflow:hidden}\\r\\n.project-card-small img{height:120px; object-fit:cover; border-radius:8px; transition:transform 420ms var(--transition)}\\r\\n.project-card-small::after{content:''; position:absolute; inset:0; background:linear-gradient(180deg, rgba(11,37,64,0.0), rgba(11,37,64,0.08)); pointer-events:none; opacity:0; transition:opacity 320ms var(--transition)}\\r\\n.project-card-small:hover img{transform:scale(1.04) translateY(-4px)}\\r\\n.project-card-small:hover::after{opacity:1}\\r\\n.project-card-small .project-meta{padding:10px}\\r\\n\\r\\n/* tilt hover - hardware accelerated */\\r\\n.project-card-small.tilt{transform-style:preserve-3d; transition:transform 280ms var(--transition)}\\r\\n\\r\\n/* featured image subtle parallax */\\r\\n.featured-img-wrap{overflow:hidden}\\r\\n.featured-img{transition:transform 520ms var(--transition)}\\r\\n.featured:hover .featured-img{transform:scale(1.03) translateY(-6px)}\\r\\n.skills-list{display:flex; gap:8px; flex-wrap:wrap}\\r\\n.skill-pill{background:linear-gradient(180deg,#fff,#fbfdff); border:1px solid rgba(11,37,64,0.04); padding:6px 10px; border-radius:999px; font-size:13px}\\r\\n/*\\r\\n High-contrast skill badges \\r\\n.skill-pill{ background: var(--color-primary); color: white; border:0; padding:6px 10px; border-radius:999px; font-size:13px; font-weight:600; box-shadow: 0 6px 18px rgba(11,37,64,0.08);} \\r\\n.skill-pill.alt{ background: var(--color-secondary); color: white; }\\r\\n*/\\r\\n/* Make hero chips more legible \\r\\n.chip{ background: rgba(11,37,64,0.08); color: var(--color-text); border:0; font-weight:600 }\\r\\n*/\\r\\n\\r\\n/* Featured project layout */\\r\\n.featured-projects{display:grid; grid-template-columns:2fr 1fr; grid-gap:16px; gap:16px; align-items:start}\\r\\n.featured{display:flex; gap:16px; background:linear-gradient(180deg,#fff,#fbfdff); border-radius:12px; overflow:hidden; box-shadow:var(--card-elev); border:1px solid rgba(11,37,64,0.04)}\\r\\n.featured-img-wrap{width:56%; display:block; background:#eef4fb}\\r\\n.featured-img{width:100%; height:100%; object-fit:cover; display:block; min-height:220px}\\r\\n.featured-info{padding:16px; display:flex; flex-direction:column; gap:8px}\\r\\n.featured-info h4{margin:0}\\r\\n.aside-small{display:flex; flex-direction:column; gap:12px}\\r\\n.project-card-small img{width:100%; height:100px; object-fit:cover; border-radius:8px}\\r\\n.tech-badges{display:flex; gap:8px; flex-wrap:wrap; margin-top:8px}\\r\\n\\r\\n/* panel slide animations (left / right) */\\r\\n.anim-enter-right{transform:translateX(18px); opacity:0}\\r\\n.anim-enter-left{transform:translateX(-18px); opacity:0}\\r\\n.anim-enter-active{transform:none; opacity:1; transition:transform 420ms var(--transition), opacity 420ms var(--transition)}\\r\\n.anim-exit-right{transform:none; opacity:1}\\r\\n.anim-exit-left{transform:none; opacity:1}\\r\\n.anim-exit-active.anim-exit-right{transform:translateX(-18px); opacity:0; transition:transform 420ms var(--transition), opacity 420ms var(--transition)}\\r\\n.anim-exit-active.anim-exit-left{transform:translateX(18px); opacity:0; transition:transform 420ms var(--transition), opacity 420ms var(--transition)}\\r\\n\\r\\n/* light / dark panel variants */\\r\\n.role-panel.light{background:linear-gradient(180deg,#ffffff,#fbfdff)}\\r\\n.role-panel.dark{background:linear-gradient(180deg,#0b1220,#071021); color:#e6eef8}\\r\\n.role-panel.dark .muted{color:rgba(230,238,248,0.75)}\\r\\n\\r\\n@media (max-width:980px){\\r\\n  .featured-projects{grid-template-columns:1fr;}\\r\\n  .featured-img{min-height:160px; width:100%}\\r\\n  .projects-list{grid-template-columns:1fr}\\r\\n}\\r\\n\\r\\n/* Accordions (certificaciones) */\\r\\n.accordion{border-radius:10px; overflow:hidden}\\r\\n.acc-item{border-bottom:1px solid #eef4fb}\\r\\n.acc-item button{background:white; width:100%; padding:12px; text-align:left; border:0; font-weight:600}\\r\\n.acc-item .panel{display:none; padding:12px; color:var(--muted); font-size:13px}\\r\\n\\r\\n/* Contact form */\\r\\nform.contact{display:grid; grid-gap:8px; gap:8px}\\r\\ninput, textarea{width:100%; padding:10px; border-radius:8px; border:1px solid var(--color-neutral-light); background: var(--color-bg); transition: border-color 0.3s ease;}\\r\\ninput:focus, textarea:focus { border-color: var(--color-secondary); outline: none; }\\r\\nbutton.send{background:var(--color-secondary); color:white; padding:12px; border-radius:8px; border:0; font-weight: 700; transition: background-color 0.3s ease;}\\r\\nbutton.send:hover { background-color: var(--color-accent-alt); }\\r\\n\\r\\n/* Footer */\\r\\nfooter{margin-top:32px; padding:18px 0; text-align:center; color:var(--muted); font-size:13px}\\r\\n\\r\\n/* Responsive tweaks */\\r\\n@media (max-width:980px){\\r\\n  .slides{gap:12px}\\r\\n  .card-slide{min-width:280px}\\r\\n  .cards-grid{grid-template-columns:1fr}\\r\\n  /* Stack hero columns on narrow screens */\\r\\n  .hero{grid-template-columns:1fr}\\r\\n  html{font-size:15px}\\r\\n  .hero-title{font-size:28px}\\r\\n  .lead{font-size:15px}\\r\\n}\\r\\n\\r\\n@media (max-width:920px){\\r\\n  .grid-projects{grid-template-columns:1fr}\\r\\n  .wrap{padding:12px}\\r\\n  header.site-header{flex-direction:column; gap:12px; align-items:flex-start}\\r\\n}\\r\\n\\r\\n/* Animations & accessibility */\\r\\n.reveal{opacity:0; transform:translateY(10px); transition:all 520ms cubic-bezier(.2,.9,.3,1)}\\r\\n.reveal.visible{opacity:1; transform:none}\\r\\n@media (prefers-reduced-motion: reduce){\\r\\n  *, *::before, *::after{transition:none !important; animation:none !important}\\r\\n}\\r\\n:focus{outline:none}\\r\\n:focus-visible{outline:3px solid rgba(11,107,255,0.14); outline-offset:3px}\\r\\n\\r\\n/* Floating sticker badge */\\r\\n#sticker-badge{position:fixed; right:18px; bottom:18px; width:64px; height:64px; border-radius:999px; padding:6px; border:2px solid rgba(255,255,255,0.92); background:linear-gradient(180deg,#fff,#fff); box-shadow:0 8px 24px rgba(12,18,36,0.18); display:inline-grid; place-items:center; z-index:1200; cursor:pointer; transition:transform .18s ease, box-shadow .18s ease}\\r\\n#sticker-badge img{width:100%; height:100%; border-radius:999px; display:block; object-fit:cover}\\r\\n#sticker-badge svg{width:100%; height:100%; border-radius:999px}\\r\\n#sticker-badge:focus, #sticker-badge:focus-visible{outline:3px solid var(--accent); transform:translateY(-3px) scale(1.02)}\\r\\n#sticker-badge:hover{transform:translateY(-4px); box-shadow:0 14px 38px rgba(12,18,36,0.22)}\\r\\n@media (max-width:640px){#sticker-badge{right:12px; bottom:12px; width:56px; height:56px}}\\r\\n@media (prefers-reduced-motion: reduce){#sticker-badge{transition:none; transform:none}}\\r\\n.hidden{display:none !important}\\r\\n\\r\\n/* Dark theme overrides */\\r\\n:root[data-theme=\\\"dark\\\"]{\\r\\n  --color-primary: #FFFFFF;\\r\\n  --color-secondary: #6C63FF;\\r\\n  --color-accent-alt: #FF7849;\\r\\n  --color-neutral-light: #2a2a2a;\\r\\n  --color-neutral-dark: #a0a0a0;\\r\\n  --color-bg: #0f0f0f;\\r\\n  --color-text: #EAEAEA;\\r\\n}\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] body{ background: linear-gradient(180deg, #1a1a1a, #0f0f0f); color:var(--color-text); }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .site-header{ background: rgba(26,26,26,0.8); border:1px solid var(--color-neutral-light); }\\r\\n:root[data-theme=\\\"dark\\\"] .card { background: #1a1a1a; border: 1px solid var(--color-neutral-light); box-shadow: none; }\\r\\n:root[data-theme=\\\"dark\\\"] .hero-card { background: transparent; }\\r\\n:root[data-theme=\\\"dark\\\"] .chip { background: var(--color-neutral-light); color: var(--color-text); }\\r\\n:root[data-t heme=\\\"dark\\\"] .role-tab { background: transparent; border-color: var(--color-neutral-light); }\\r\\n:root[data-theme=\\\"dark\\\"] .role-tab.active { background: var(--color-secondary); border-color: var(--color-secondary); }\\r\\n:root[data-theme=\\\"dark\\\"] .roles-panels { background: #1a1a1a; border: 1px solid var(--color-neutral-light); box-shadow: none; }\\r\\n:root[data-theme=\\\"dark\\\"] input, :root[data-theme=\\\"dark\\\"] textarea { background: #0f0f0f; border-color: var(--color-neutral-light); color: var(--color-text); }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .modal-media{background:#071021}\\r\\n\\r\\n/* Dark-mode fixes for slider and UI chrome that used hard-coded light colors */\\r\\n:root[data-theme=\\\"dark\\\"] .dot{ background: linear-gradient(90deg,#123447,#0b2433); }\\r\\n:root[data-theme=\\\"dark\\\"] .dot.active{ background: linear-gradient(90deg,var(--accent), var(--accent-3)); }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .nav-controls button{ background: rgba(255,255,255,0.02); border:1px solid rgba(255,255,255,0.04); color:var(--accent-2); box-shadow:none }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .card-slide h3,\\r\\n:root[data-theme=\\\"dark\\\"] .card-slide p,\\r\\n:root[data-theme=\\\"dark\\\"] .project-card-small .muted,\\r\\n:root[data-theme=\\\"dark\\\"] .tiny{ color:var(--muted) }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .btn-outline{ background:transparent; border:1px solid rgba(255,255,255,0.04); color:var(--accent-2) }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .acc-item button{ background:transparent; color:var(--accent-2) }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .project-card-small::after{ background:linear-gradient(180deg, rgba(0,0,0,0.08), rgba(0,0,0,0.18)); }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .dots{ filter:brightness(0.9); }\\r\\n\\r\\n\\r\\n\\r\\n/* Theme toggle */\\r\\n.theme-toggle{margin-left:12px; background:transparent; border:0; font-size:18px; cursor:pointer; padding:8px; border-radius:8px}\\r\\n.theme-toggle:focus{outline:3px solid rgba(11,107,255,0.12)}\\r\\n\\r\\n/* Modal */\\r\\n.modal{position:fixed; inset:0; display:none; align-items:center; justify-content:center; background:rgba(5,10,18,0.55); z-index:1400}\\r\\n.modal.active{display:flex}\\r\\n.modal .frame{background:transparent; max-width:1100px; width:calc(100% - 48px); border-radius:12px; position:relative}\\r\\n.modal-media{background:#071021; border-radius:12px; overflow:hidden}\\r\\n.modal-media img{width:100%; height:auto; display:block; object-fit:cover}\\r\\n.modal-caption{padding:14px; background:linear-gradient(180deg, rgba(255,255,255,0.98), rgba(255,255,255,0.96)); border-radius:0 0 12px 12px; color:var(--accent-2)}\\r\\n.modal-close{position:absolute; right:8px; top:8px; background:rgba(255,255,255,0.9); border:0; padding:8px 10px; border-radius:8px; cursor:pointer}\\r\\n\\r\\n/* Hero with background media placeholder */\\r\\n.hero{position:relative; overflow:visible}\\r\\n.hero::before{content:''; position:absolute; inset:0; z-index:-1; background:linear-gradient(180deg, rgba(6,11,20,0.04), rgba(255,255,255,0)); pointer-events:none}\\r\\n.hero-media{position:absolute; right:0; top:0; width:46%; height:100%; border-radius:12px; overflow:hidden; filter:contrast(105%) saturate(105%); opacity:0.95}\\r\\n.hero-media img, .hero-media video{width:100%; height:100%; object-fit:cover; display:block}\\r\\n\\r\\n/* Editorial spacing */\\r\\n.wrap{max-width:1200px; margin:40px auto; padding:28px}\\r\\n.hero-card{padding:48px}\\r\\n.hero-title{font-size:52px}\\r\\n.lead{font-size:20px; max-width:70ch}\\r\\n\\r\\n/* Cursor tracking accent (subtle) */\\r\\n.cursor-accent{position:fixed; pointer-events:none; width:220px; height:220px; border-radius:20px; mix-blend-mode:multiply; transform:translate(-50%,-50%) scale(0.18); transition:transform .28s ease, opacity .4s ease; opacity:0}\\r\\n.cursor-accent.show{opacity:0.95}\\r\\n\\r\\n@media (max-width:980px){\\r\\n  .hero-media{display:none}\\r\\n  .hero{grid-template-columns:1fr}\\r\\n  .hero-title{font-size:34px}\\r\\n}\\r\\n/* ===== Experiencia laboral ===== */\\r\\n.xp-list {\\r\\n  display: grid;\\r\\n  grid-gap: 1rem;\\r\\n  gap: 1rem;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.xp {\\r\\n  border: 1px solid var(--color-neutral-light);\\r\\n  border-radius: var(--radius);\\r\\n  padding: 1.5rem;\\r\\n  transition: background-color 0.3s ease;\\r\\n}\\r\\n.xp:hover { background-color: rgba(0,0,0,0.02); }\\r\\n\\r\\n.xp-header {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  gap: 8px 12px;\\r\\n  align-items: baseline;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.xp-title { font-weight: 700; }\\r\\n.xp-body { margin: 8px 0 0 18px; }\\r\\n.xp-body li { margin-bottom: 6px; }\\r\\n\\r\\n/* Variante ‚Äúl√≠nea de tiempo‚Äù (act√≠vala a√±adiendo class=\\\"reveal timeline\\\" al section#experiencia) */\\r\\n#experiencia.timeline .xp-list { \\r\\n  position: relative; \\r\\n  padding-left: 18px; \\r\\n  border-left: 2px solid currentColor; \\r\\n  opacity: .9;\\r\\n}\\r\\n#experiencia.timeline .xp { position: relative; }\\r\\n#experiencia.timeline .xp::before {\\r\\n  content: \\\"\\\";\\r\\n  position: absolute;\\r\\n  left: -10px;\\r\\n  top: 18px;\\r\\n  width: 12px; height: 12px; border-radius: 50%;\\r\\n  background: currentColor;\\r\\n  opacity: .9;\\r\\n}\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .xp {\\r\\n  border-color: var(--color-neutral-light);\\r\\n}\\r\\n:root[data-theme=\\\"dark\\\"] .xp:hover {\\r\\n  background-color: rgba(255,255,255,0.03);\\r\\n}\\r\\n:root[data-theme=\\\"dark\\\"] #experiencia.timeline .xp-list {\\r\\n  border-left-color: var(--color-neutral-dark);\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* Modernized stylesheet for portfolio\\r\\n   - Variables: palette, typography scale\\r\\n   - Clean layout for header, hero (70/30), roles tabs, cards\\r\\n   - Smooth microinteractions and accessible focus\\r\\n*/\\r\\n:root{\\r\\n  /* Paleta de Colores */\\r\\n  --color-primary: #111111;\\r\\n  --color-secondary: #6C63FF;\\r\\n  --color-accent-alt: #FF7849;\\r\\n  --color-neutral-light: #EAEAEA;\\r\\n  --color-neutral-dark: #BFBFBF;\\r\\n  --color-bg: #fafafa;\\r\\n  --color-text: #111111;\\r\\n\\r\\n  /* Tipograf√≠a */\\r\\n  --ff-heading: \\\"Space Grotesk\\\", \\\"Satoshi\\\", system-ui, sans-serif;\\r\\n  --ff-body: \\\"Manrope\\\", \\\"Inter\\\", system-ui, sans-serif;\\r\\n\\r\\n  /* Estilos y espaciado */\\r\\n  --maxw: 1100px;\\r\\n  --radius: 12px;\\r\\n  --shadow-soft: 0 4px 20px rgba(0,0,0,0.05);\\r\\n  --transition: 320ms cubic-bezier(.2,.9,.3,1);\\r\\n  /* typographic scale */\\r\\n  --step--1: 12px;\\r\\n  --step-0: 14px;\\r\\n  --step-1: 16px;\\r\\n  --step-2: 20px;\\r\\n  --step-3: 26px;\\r\\n  --step-4: 34px;\\r\\n  --lead: 18px;\\r\\n}\\r\\n\\r\\n/* Base */\\r\\n*{box-sizing:border-box}\\r\\nhtml{font-family:var(--ff-body); font-size:16px; scroll-behavior: smooth;}\\r\\nbody{height:100%; margin:0; color:var(--color-text); background-color: var(--color-bg); font-size:var(--step-1); line-height:1.6}\\r\\na,button{font-family:inherit}\\r\\nimg{max-width:100%; display:block}\\r\\n.wrap{max-width:var(--maxw); margin:0 auto; padding: 0 2rem}\\r\\n\\r\\nh1, h2, h3, h4, h5, h6 {\\r\\n  font-family: var(--ff-heading);\\r\\n  font-weight: 700;\\r\\n  letter-spacing: -0.02em;\\r\\n}\\r\\n\\r\\n/* Header */\\r\\n.site-header{position:sticky; top:1rem; backdrop-filter: blur(10px); background:rgba(255,255,255,0.8); border-radius:var(--radius); border:1px solid var(--color-neutral-light); padding:1rem 1.5rem; display:flex; align-items:center; justify-content:space-between; z-index:60; transition: transform 0.3s ease-out; width: calc(100% - 2rem); max-width: var(--maxw); margin: 1rem auto;}\\r\\n.site-header:not(.visible) { transform: translateY(-120%); }\\r\\n.brand{display:flex; gap:14px; align-items:center}\\r\\n.logo-mark{width:48px; height:48px; border-radius: 50%; background:var(--color-secondary); display:flex; align-items:center; justify-content:center; color:white; font-weight:700; font-size:18px; font-family: var(--ff-heading);}\\r\\n.brand h1{font-size:15px; margin:0}\\r\\n.brand p{margin:0; font-size:13px; color:var(--muted)}\\r\\nnav.primary{display:flex; gap:12px; align-items:center}\\r\\n.nav.primary{align-items:center}\\r\\n.nav.primary a{font-size:13px; padding:6px 8px; border-radius:8px; text-transform:uppercase; letter-spacing:1px; font-weight:600}\\r\\n.nav.primary a::after{content:''; display:block; height:2px; width:0; background:var(--accent); transition:width 260ms var(--transition); margin-top:6px; border-radius:2px}\\r\\n.nav.primary a:hover::after{width:100%}\\r\\n.nav.primary a:hover{background:transparent; color: var(--color-secondary);}\\r\\n.cta{background:var(--color-secondary); color:white; padding:9px 14px; border-radius:10px; font-weight:700; transition: background-color 0.3s ease;}\\r\\n.cta:hover { background-color: var(--color-accent-alt); }\\r\\n\\r\\n/* Hero / Slider */\\r\\n.hero{display:grid; grid-template-columns:70% 30%; gap:20px; margin-top:20px; align-items:start}\\r\\n.hero-card{background:transparent; padding:26px; border-radius:var(--radius); }\\r\\n.hero-card{padding:40px 42px}\\r\\n.hero-title{font-size:42px; margin:0 0 12px 0; font-weight:800; letter-spacing:-0.02em}\\r\\n.lead{font-size:18px; color:var(--muted); margin:0 0 18px 0; max-width:66ch}\\r\\n.hero .chips{margin-top:18px}\\r\\n.chips{display:flex; gap:8px; flex-wrap:wrap; margin-top:8px}\\r\\n.chip{background:var(--color-neutral-light); border:1px solid transparent; padding:6px 12px; border-radius:999px; font-size:13px; color:var(--color-text)}\\r\\n\\r\\n.slider-wrap{background:var(--card); padding:22px; border-radius:var(--radius); border:1px solid rgba(11,37,64,0.04); box-shadow:var(--card-elev)}\\r\\n.slider{display:flex; gap:14px; align-items:center; overflow:hidden; position:relative}\\r\\n.slides{display:flex; transition:transform 520ms cubic-bezier(.2,.9,.3,1)}\\r\\n.card-slide{min-width:320px; max-width:460px; background:var(--card); border-radius:12px; padding:18px; box-shadow:var(--card-elev); border:1px solid rgba(11,37,64,0.03); display:flex; flex-direction:column; gap:10px; transition:transform var(--transition), box-shadow var(--transition)}\\r\\n.card-slide:hover{transform:translateY(-6px); box-shadow:0 18px 40px rgba(11,37,64,0.09)}\\r\\n.card-slide{will-change:transform}\\r\\n.card-slide h3{margin:0;font-size:16px}\\r\\n.card-slide p{margin:0;color:var(--muted);font-size:14px}\\r\\n.card-actions{margin-top:auto; display:flex; gap:8px}\\r\\n.btn{padding:9px 14px;border-radius:10px;border:0;font-weight:700;cursor:pointer; transition:all var(--transition)}\\r\\n.btn-primary{background:var(--accent); color:white; box-shadow:0 8px 20px rgba(11,107,255,0.12)}\\r\\n.btn-outline{background:white;border:1px solid rgba(11,37,64,0.04);color:var(--accent-2)}\\r\\n\\r\\n.nav-controls{display:flex; align-items:center; gap:8px}\\r\\n.nav-controls button{background:white;border:1px solid rgba(11,37,64,0.04);padding:8px;border-radius:10px;cursor:pointer; transition:all var(--transition)}\\r\\n.nav-controls button:hover{transform:translateY(-2px)}\\r\\n\\r\\n/* Dots */\\r\\n.dots{display:flex; gap:8px; margin-left:12px}\\r\\n.dot{width:10px;height:10px;border-radius:50%;background:linear-gradient(90deg,#e9f2ff,#f0f9f8)}\\r\\n.dot.active{background:var(--accent)}\\r\\n\\r\\n/* Content & Panels */\\r\\n#content-area{margin-top:20px; display:grid; grid-template-columns:1fr; gap:14px}\\r\\n.panel{background:white; padding:2rem; border-radius:var(--radius); box-shadow: var(--shadow-soft); display:none}\\r\\n.panel.active{display:block}\\r\\n.cards-grid{display:grid; grid-template-columns:repeat(2,1fr); gap:14px}\\r\\n.project-card{background:white;border-radius:10px;padding:12px;border:1px solid #eef4fb}\\r\\n\\r\\n/* Sidebar */\\r\\n.side{display:flex; flex-direction:column; gap:14px}\\r\\n.card{background:white; padding:2rem; border-radius:var(--radius); box-shadow: var(--shadow-soft);}\\r\\n\\r\\n/* Roles / Tabs section */\\r\\n.roles-tabs{margin-top:14px}\\r\\n.roles-nav{display:flex; gap:8px; flex-wrap:wrap; margin-bottom:14px}\\r\\n.role-tab{background:transparent; border:1px solid var(--color-neutral-light); padding:8px 12px; border-radius:10px; cursor:pointer; font-weight:700; display:inline-flex; align-items:center; gap:8px; transition:all var(--transition)}\\r\\n.role-tab .icon{font-size:18px; opacity:0.95}\\r\\n.role-tab .label{font-weight:700}\\r\\n.role-tab:hover{transform:translateY(-3px)}\\r\\n.role-tab.active{background:linear-gradient(90deg,var(--accent),var(--accent-3)); color:white; box-shadow:0 12px 30px rgba(11,37,64,0.08)}\\r\\n.role-tab:focus{outline:3px solid rgba(11,107,255,0.12); outline-offset:3px}\\r\\n\\r\\n/* SVG icon color & size */\\r\\n.role-tab svg.icon{width:18px; height:18px; color:var(--muted); transition:color var(--transition), transform var(--transition)}\\r\\n.role-tab:hover svg.icon{transform:translateY(-2px)}\\r\\n.role-tab.active svg.icon{color:rgba(255,255,255,0.95)}\\r\\n\\r\\n/* hide labels on very small screens to save space */\\r\\n@media (max-width:520px){\\r\\n  .role-tab .label{display:none}\\r\\n}\\r\\n\\r\\n.roles-panels{position:relative; min-height:200px; background: white; border-radius: var(--radius); padding: 2rem; box-shadow: var(--shadow-soft);}\\r\\n.role-panel{position:absolute; inset:0; opacity:0; transform:translateY(8px); transition:all 320ms cubic-bezier(.2,.9,.3,1); pointer-events:none}\\r\\n.role-panel.active{opacity:1; transform:none; pointer-events:auto; position:relative}\\r\\n.role-content{display:grid; grid-template-columns:1fr; gap:16px}\\r\\n.role-hero{display:flex; flex-direction:column; gap:8px}\\r\\n.projects-list{display:grid; grid-template-columns:repeat(3,1fr); gap:12px}\\r\\n.project-card-small{background:var(--card); border-radius:10px; padding:10px; border:1px solid rgba(11,37,64,0.04)}\\r\\n.project-card-small{position:relative; overflow:hidden}\\r\\n.project-card-small img{height:120px; object-fit:cover; border-radius:8px; transition:transform 420ms var(--transition)}\\r\\n.project-card-small::after{content:''; position:absolute; inset:0; background:linear-gradient(180deg, rgba(11,37,64,0.0), rgba(11,37,64,0.08)); pointer-events:none; opacity:0; transition:opacity 320ms var(--transition)}\\r\\n.project-card-small:hover img{transform:scale(1.04) translateY(-4px)}\\r\\n.project-card-small:hover::after{opacity:1}\\r\\n.project-card-small .project-meta{padding:10px}\\r\\n\\r\\n/* tilt hover - hardware accelerated */\\r\\n.project-card-small.tilt{transform-style:preserve-3d; transition:transform 280ms var(--transition)}\\r\\n\\r\\n/* featured image subtle parallax */\\r\\n.featured-img-wrap{overflow:hidden}\\r\\n.featured-img{transition:transform 520ms var(--transition)}\\r\\n.featured:hover .featured-img{transform:scale(1.03) translateY(-6px)}\\r\\n.skills-list{display:flex; gap:8px; flex-wrap:wrap}\\r\\n.skill-pill{background:linear-gradient(180deg,#fff,#fbfdff); border:1px solid rgba(11,37,64,0.04); padding:6px 10px; border-radius:999px; font-size:13px}\\r\\n/*\\r\\n High-contrast skill badges \\r\\n.skill-pill{ background: var(--color-primary); color: white; border:0; padding:6px 10px; border-radius:999px; font-size:13px; font-weight:600; box-shadow: 0 6px 18px rgba(11,37,64,0.08);} \\r\\n.skill-pill.alt{ background: var(--color-secondary); color: white; }\\r\\n*/\\r\\n/* Make hero chips more legible \\r\\n.chip{ background: rgba(11,37,64,0.08); color: var(--color-text); border:0; font-weight:600 }\\r\\n*/\\r\\n\\r\\n/* Featured project layout */\\r\\n.featured-projects{display:grid; grid-template-columns:2fr 1fr; gap:16px; align-items:start}\\r\\n.featured{display:flex; gap:16px; background:linear-gradient(180deg,#fff,#fbfdff); border-radius:12px; overflow:hidden; box-shadow:var(--card-elev); border:1px solid rgba(11,37,64,0.04)}\\r\\n.featured-img-wrap{width:56%; display:block; background:#eef4fb}\\r\\n.featured-img{width:100%; height:100%; object-fit:cover; display:block; min-height:220px}\\r\\n.featured-info{padding:16px; display:flex; flex-direction:column; gap:8px}\\r\\n.featured-info h4{margin:0}\\r\\n.aside-small{display:flex; flex-direction:column; gap:12px}\\r\\n.project-card-small img{width:100%; height:100px; object-fit:cover; border-radius:8px}\\r\\n.tech-badges{display:flex; gap:8px; flex-wrap:wrap; margin-top:8px}\\r\\n\\r\\n/* panel slide animations (left / right) */\\r\\n.anim-enter-right{transform:translateX(18px); opacity:0}\\r\\n.anim-enter-left{transform:translateX(-18px); opacity:0}\\r\\n.anim-enter-active{transform:none; opacity:1; transition:transform 420ms var(--transition), opacity 420ms var(--transition)}\\r\\n.anim-exit-right{transform:none; opacity:1}\\r\\n.anim-exit-left{transform:none; opacity:1}\\r\\n.anim-exit-active.anim-exit-right{transform:translateX(-18px); opacity:0; transition:transform 420ms var(--transition), opacity 420ms var(--transition)}\\r\\n.anim-exit-active.anim-exit-left{transform:translateX(18px); opacity:0; transition:transform 420ms var(--transition), opacity 420ms var(--transition)}\\r\\n\\r\\n/* light / dark panel variants */\\r\\n.role-panel.light{background:linear-gradient(180deg,#ffffff,#fbfdff)}\\r\\n.role-panel.dark{background:linear-gradient(180deg,#0b1220,#071021); color:#e6eef8}\\r\\n.role-panel.dark .muted{color:rgba(230,238,248,0.75)}\\r\\n\\r\\n@media (max-width:980px){\\r\\n  .featured-projects{grid-template-columns:1fr;}\\r\\n  .featured-img{min-height:160px; width:100%}\\r\\n  .projects-list{grid-template-columns:1fr}\\r\\n}\\r\\n\\r\\n/* Accordions (certificaciones) */\\r\\n.accordion{border-radius:10px; overflow:hidden}\\r\\n.acc-item{border-bottom:1px solid #eef4fb}\\r\\n.acc-item button{background:white; width:100%; padding:12px; text-align:left; border:0; font-weight:600}\\r\\n.acc-item .panel{display:none; padding:12px; color:var(--muted); font-size:13px}\\r\\n\\r\\n/* Contact form */\\r\\nform.contact{display:grid; gap:8px}\\r\\ninput, textarea{width:100%; padding:10px; border-radius:8px; border:1px solid var(--color-neutral-light); background: var(--color-bg); transition: border-color 0.3s ease;}\\r\\ninput:focus, textarea:focus { border-color: var(--color-secondary); outline: none; }\\r\\nbutton.send{background:var(--color-secondary); color:white; padding:12px; border-radius:8px; border:0; font-weight: 700; transition: background-color 0.3s ease;}\\r\\nbutton.send:hover { background-color: var(--color-accent-alt); }\\r\\n\\r\\n/* Footer */\\r\\nfooter{margin-top:32px; padding:18px 0; text-align:center; color:var(--muted); font-size:13px}\\r\\n\\r\\n/* Responsive tweaks */\\r\\n@media (max-width:980px){\\r\\n  .slides{gap:12px}\\r\\n  .card-slide{min-width:280px}\\r\\n  .cards-grid{grid-template-columns:1fr}\\r\\n  /* Stack hero columns on narrow screens */\\r\\n  .hero{grid-template-columns:1fr}\\r\\n  html{font-size:15px}\\r\\n  .hero-title{font-size:28px}\\r\\n  .lead{font-size:15px}\\r\\n}\\r\\n\\r\\n@media (max-width:920px){\\r\\n  .grid-projects{grid-template-columns:1fr}\\r\\n  .wrap{padding:12px}\\r\\n  header.site-header{flex-direction:column; gap:12px; align-items:flex-start}\\r\\n}\\r\\n\\r\\n/* Animations & accessibility */\\r\\n.reveal{opacity:0; transform:translateY(10px); transition:all 520ms cubic-bezier(.2,.9,.3,1)}\\r\\n.reveal.visible{opacity:1; transform:none}\\r\\n@media (prefers-reduced-motion: reduce){\\r\\n  *, *::before, *::after{transition:none !important; animation:none !important}\\r\\n}\\r\\n:focus{outline:none}\\r\\n:focus-visible{outline:3px solid rgba(11,107,255,0.14); outline-offset:3px}\\r\\n\\r\\n/* Floating sticker badge */\\r\\n#sticker-badge{position:fixed; right:18px; bottom:18px; width:64px; height:64px; border-radius:999px; padding:6px; border:2px solid rgba(255,255,255,0.92); background:linear-gradient(180deg,#fff,#fff); box-shadow:0 8px 24px rgba(12,18,36,0.18); display:inline-grid; place-items:center; z-index:1200; cursor:pointer; transition:transform .18s ease, box-shadow .18s ease}\\r\\n#sticker-badge img{width:100%; height:100%; border-radius:999px; display:block; object-fit:cover}\\r\\n#sticker-badge svg{width:100%; height:100%; border-radius:999px}\\r\\n#sticker-badge:focus, #sticker-badge:focus-visible{outline:3px solid var(--accent); transform:translateY(-3px) scale(1.02)}\\r\\n#sticker-badge:hover{transform:translateY(-4px); box-shadow:0 14px 38px rgba(12,18,36,0.22)}\\r\\n@media (max-width:640px){#sticker-badge{right:12px; bottom:12px; width:56px; height:56px}}\\r\\n@media (prefers-reduced-motion: reduce){#sticker-badge{transition:none; transform:none}}\\r\\n.hidden{display:none !important}\\r\\n\\r\\n/* Dark theme overrides */\\r\\n:root[data-theme=\\\"dark\\\"]{\\r\\n  --color-primary: #FFFFFF;\\r\\n  --color-secondary: #6C63FF;\\r\\n  --color-accent-alt: #FF7849;\\r\\n  --color-neutral-light: #2a2a2a;\\r\\n  --color-neutral-dark: #a0a0a0;\\r\\n  --color-bg: #0f0f0f;\\r\\n  --color-text: #EAEAEA;\\r\\n}\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] body{ background: linear-gradient(180deg, #1a1a1a, #0f0f0f); color:var(--color-text); }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .site-header{ background: rgba(26,26,26,0.8); border:1px solid var(--color-neutral-light); }\\r\\n:root[data-theme=\\\"dark\\\"] .card { background: #1a1a1a; border: 1px solid var(--color-neutral-light); box-shadow: none; }\\r\\n:root[data-theme=\\\"dark\\\"] .hero-card { background: transparent; }\\r\\n:root[data-theme=\\\"dark\\\"] .chip { background: var(--color-neutral-light); color: var(--color-text); }\\r\\n:root[data-t heme=\\\"dark\\\"] .role-tab { background: transparent; border-color: var(--color-neutral-light); }\\r\\n:root[data-theme=\\\"dark\\\"] .role-tab.active { background: var(--color-secondary); border-color: var(--color-secondary); }\\r\\n:root[data-theme=\\\"dark\\\"] .roles-panels { background: #1a1a1a; border: 1px solid var(--color-neutral-light); box-shadow: none; }\\r\\n:root[data-theme=\\\"dark\\\"] input, :root[data-theme=\\\"dark\\\"] textarea { background: #0f0f0f; border-color: var(--color-neutral-light); color: var(--color-text); }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .modal-media{background:#071021}\\r\\n\\r\\n/* Dark-mode fixes for slider and UI chrome that used hard-coded light colors */\\r\\n:root[data-theme=\\\"dark\\\"] .dot{ background: linear-gradient(90deg,#123447,#0b2433); }\\r\\n:root[data-theme=\\\"dark\\\"] .dot.active{ background: linear-gradient(90deg,var(--accent), var(--accent-3)); }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .nav-controls button{ background: rgba(255,255,255,0.02); border:1px solid rgba(255,255,255,0.04); color:var(--accent-2); box-shadow:none }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .card-slide h3,\\r\\n:root[data-theme=\\\"dark\\\"] .card-slide p,\\r\\n:root[data-theme=\\\"dark\\\"] .project-card-small .muted,\\r\\n:root[data-theme=\\\"dark\\\"] .tiny{ color:var(--muted) }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .btn-outline{ background:transparent; border:1px solid rgba(255,255,255,0.04); color:var(--accent-2) }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .acc-item button{ background:transparent; color:var(--accent-2) }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .project-card-small::after{ background:linear-gradient(180deg, rgba(0,0,0,0.08), rgba(0,0,0,0.18)); }\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .dots{ filter:brightness(0.9); }\\r\\n\\r\\n\\r\\n\\r\\n/* Theme toggle */\\r\\n.theme-toggle{margin-left:12px; background:transparent; border:0; font-size:18px; cursor:pointer; padding:8px; border-radius:8px}\\r\\n.theme-toggle:focus{outline:3px solid rgba(11,107,255,0.12)}\\r\\n\\r\\n/* Modal */\\r\\n.modal{position:fixed; inset:0; display:none; align-items:center; justify-content:center; background:rgba(5,10,18,0.55); z-index:1400}\\r\\n.modal.active{display:flex}\\r\\n.modal .frame{background:transparent; max-width:1100px; width:calc(100% - 48px); border-radius:12px; position:relative}\\r\\n.modal-media{background:#071021; border-radius:12px; overflow:hidden}\\r\\n.modal-media img{width:100%; height:auto; display:block; object-fit:cover}\\r\\n.modal-caption{padding:14px; background:linear-gradient(180deg, rgba(255,255,255,0.98), rgba(255,255,255,0.96)); border-radius:0 0 12px 12px; color:var(--accent-2)}\\r\\n.modal-close{position:absolute; right:8px; top:8px; background:rgba(255,255,255,0.9); border:0; padding:8px 10px; border-radius:8px; cursor:pointer}\\r\\n\\r\\n/* Hero with background media placeholder */\\r\\n.hero{position:relative; overflow:visible}\\r\\n.hero::before{content:''; position:absolute; inset:0; z-index:-1; background:linear-gradient(180deg, rgba(6,11,20,0.04), rgba(255,255,255,0)); pointer-events:none}\\r\\n.hero-media{position:absolute; right:0; top:0; width:46%; height:100%; border-radius:12px; overflow:hidden; filter:contrast(105%) saturate(105%); opacity:0.95}\\r\\n.hero-media img, .hero-media video{width:100%; height:100%; object-fit:cover; display:block}\\r\\n\\r\\n/* Editorial spacing */\\r\\n.wrap{max-width:1200px; margin:40px auto; padding:28px}\\r\\n.hero-card{padding:48px}\\r\\n.hero-title{font-size:52px}\\r\\n.lead{font-size:20px; max-width:70ch}\\r\\n\\r\\n/* Cursor tracking accent (subtle) */\\r\\n.cursor-accent{position:fixed; pointer-events:none; width:220px; height:220px; border-radius:20px; mix-blend-mode:multiply; transform:translate(-50%,-50%) scale(0.18); transition:transform .28s ease, opacity .4s ease; opacity:0}\\r\\n.cursor-accent.show{opacity:0.95}\\r\\n\\r\\n@media (max-width:980px){\\r\\n  .hero-media{display:none}\\r\\n  .hero{grid-template-columns:1fr}\\r\\n  .hero-title{font-size:34px}\\r\\n}\\r\\n/* ===== Experiencia laboral ===== */\\r\\n.xp-list {\\r\\n  display: grid;\\r\\n  gap: 1rem;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.xp {\\r\\n  border: 1px solid var(--color-neutral-light);\\r\\n  border-radius: var(--radius);\\r\\n  padding: 1.5rem;\\r\\n  transition: background-color 0.3s ease;\\r\\n}\\r\\n.xp:hover { background-color: rgba(0,0,0,0.02); }\\r\\n\\r\\n.xp-header {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  gap: 8px 12px;\\r\\n  align-items: baseline;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.xp-title { font-weight: 700; }\\r\\n.xp-body { margin: 8px 0 0 18px; }\\r\\n.xp-body li { margin-bottom: 6px; }\\r\\n\\r\\n/* Variante ‚Äúl√≠nea de tiempo‚Äù (act√≠vala a√±adiendo class=\\\"reveal timeline\\\" al section#experiencia) */\\r\\n#experiencia.timeline .xp-list { \\r\\n  position: relative; \\r\\n  padding-left: 18px; \\r\\n  border-left: 2px solid currentColor; \\r\\n  opacity: .9;\\r\\n}\\r\\n#experiencia.timeline .xp { position: relative; }\\r\\n#experiencia.timeline .xp::before {\\r\\n  content: \\\"\\\";\\r\\n  position: absolute;\\r\\n  left: -10px;\\r\\n  top: 18px;\\r\\n  width: 12px; height: 12px; border-radius: 50%;\\r\\n  background: currentColor;\\r\\n  opacity: .9;\\r\\n}\\r\\n\\r\\n:root[data-theme=\\\"dark\\\"] .xp {\\r\\n  border-color: var(--color-neutral-light);\\r\\n}\\r\\n:root[data-theme=\\\"dark\\\"] .xp:hover {\\r\\n  background-color: rgba(255,255,255,0.03);\\r\\n}\\r\\n:root[data-theme=\\\"dark\\\"] #experiencia.timeline .xp-list {\\r\\n  border-left-color: var(--color-neutral-dark);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxNF0udXNlWzFdIS4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzE0XS51c2VbMl0hLi9zdHlsZS5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDdUg7QUFDdkgsOEJBQThCLGtIQUEyQjtBQUN6RDtBQUNBLG9RQUFvUSw0REFBNEQsaUNBQWlDLGtDQUFrQyxxQ0FBcUMsb0NBQW9DLDBCQUEwQiw0QkFBNEIsb0dBQW9HLCtEQUErRCx3REFBd0QscUJBQXFCLGlEQUFpRCxtREFBbUQsbURBQW1ELHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIsbUJBQW1CLEtBQUssd0JBQXdCLHNCQUFzQixTQUFTLDRCQUE0QixnQkFBZ0IseUJBQXlCLFNBQVMsYUFBYSxVQUFVLHlCQUF5QixtQ0FBbUMseUJBQXlCLGdCQUFnQixhQUFhLG9CQUFvQixRQUFRLGdCQUFnQixjQUFjLFVBQVUsdUJBQXVCLGVBQWUsZ0JBQWdCLGdDQUFnQyxxQ0FBcUMsdUJBQXVCLDhCQUE4QixLQUFLLHFDQUFxQyx3QkFBd0IsaUJBQWlCLFVBQVUscUNBQXFDLDZCQUE2QixrQ0FBa0MsNkJBQTZCLDZDQUE2QyxxQkFBcUIsY0FBYyxvQkFBb0IsK0JBQStCLFlBQVkscUNBQXFDLDBCQUEwQix3QkFBd0IsbUJBQW1CLGlDQUFpQywrQkFBK0IsV0FBVyxjQUFjLFVBQVUsbUJBQW1CLGVBQWUsWUFBWSxhQUFhLG9CQUFvQixtQ0FBbUMsY0FBYyxvQkFBb0Isd0JBQXdCLGFBQWEsaUJBQWlCLGdCQUFnQixnQ0FBZ0MsY0FBYyxnQkFBZ0IsU0FBUyxhQUFhLFVBQVUsZ0JBQWdCLG1C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UyxPQUFPLFdBQVcsYUFBYSxvQkFBb0IsaUJBQWlCLHNDQUFzQyxhQUFhLHVDQUF1QyxZQUFZLGFBQWEsa0JBQWtCLGNBQWMseUNBQXlDLGtCQUFrQixrQkFBa0IsYUFBYSxlQUFlLGFBQWEsZ0JBQWdCLGVBQWUsVUFBVSxnQkFBZ0IsZUFBZSxnRUFBZ0UsZ0JBQWdCLHFCQUFxQixhQUFhLGNBQWMsb0JBQW9CLHlCQUF5Qiw0Q0FBNEMsa0RBQWtELFVBQVUsd0JBQXdCLGFBQWEsaUNBQWlDLGtCQUFrQixhQUFhLFlBQVksMEJBQTBCLGtCQUFrQixlQUFlLEtBQUssdURBQXVELG9CQUFvQixnQkFBZ0IsdUJBQXVCLEtBQUssYUFBYSxtREFBbUQsbUNBQW1DLHNCQUFzQiw2Q0FBNkMsS0FBSyxnQkFBZ0IscUNBQXFDLG9CQUFvQixvQkFBb0Isc0JBQXNCLG9CQUFvQiw0QkFBNEIscUNBQXFDLEtBQUssb0JBQW9CLG1CQUFtQixlQUFlLHVCQUF1QixrQkFBa0IscUJBQXFCLG1KQUFtSiwwQkFBMEIsMEJBQTBCLDJDQUEyQyxrQkFBa0IsS0FBSyxnQ0FBZ0MscUJBQXFCLHVDQUF1QyxvQkFBb0IseUJBQXlCLGtCQUFrQixnQkFBZ0IsbUJBQW1CLGNBQWMsbUJBQW1CLCtCQUErQixrQkFBa0IsS0FBSyx3Q0FBd0MsK0NBQStDLEtBQUssMENBQTBDLCtDQUErQyxLQUFLLCtEQUErRCxtREFBbUQsS0FBSyx1QkFBdUI7QUFDdHFqRDtBQUNBLCtEQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlLmNzcz83Y2ZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qIE1vZGVybml6ZWQgc3R5bGVzaGVldCBmb3IgcG9ydGZvbGlvXFxyXFxuICAgLSBWYXJpYWJsZXM6IHBhbGV0dGUsIHR5cG9ncmFwaHkgc2NhbGVcXHJcXG4gICAtIENsZWFuIGxheW91dCBmb3IgaGVhZGVyLCBoZXJvICg3MC8zMCksIHJvbGVzIHRhYnMsIGNhcmRzXFxyXFxuICAgLSBTbW9vdGggbWljcm9pbnRlcmFjdGlvbnMgYW5kIGFjY2Vzc2libGUgZm9jdXNcXHJcXG4qL1xcclxcbjpyb290e1xcclxcbiAgLyogUGFsZXRhIGRlIENvbG9yZXMgKi9cXHJcXG4gIC0tY29sb3ItcHJpbWFyeTogIzExMTExMTtcXHJcXG4gIC0tY29sb3Itc2Vjb25kYXJ5OiAjNkM2M0ZGO1xcclxcbiAgLS1jb2xvci1hY2NlbnQtYWx0OiAjRkY3ODQ5O1xcclxcbiAgLS1jb2xvci1uZXV0cmFsLWxpZ2h0OiAjRUFFQUVBO1xcclxcbiAgLS1jb2xvci1uZXV0cmFsLWRhcms6ICNCRkJGQkY7XFxyXFxuICAtLWNvbG9yLWJnOiAjZmFmYWZhO1xcclxcbiAgLS1jb2xvci10ZXh0OiAjMTExMTExO1xcclxcblxcclxcbiAgLyogVGlwb2dyYWbDrWEgKi9cXHJcXG4gIC0tZmYtaGVhZGluZzogXFxcIlNwYWNlIEdyb3Rlc2tcXFwiLCBcXFwiU2F0b3NoaVxcXCIsIHN5c3RlbS11aSwgc2Fucy1zZXJpZjtcXHJcXG4gIC0tZmYtYm9keTogXFxcIk1hbnJvcGVcXFwiLCBcXFwiSW50ZXJcXFwiLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7XFxyXFxuXFxyXFxuICAvKiBFc3RpbG9zIHkgZXNwYWNpYWRvICovXFxyXFxuICAtLW1heHc6IDExMDBweDtcXHJcXG4gIC0tcmFkaXVzOiAxMnB4O1xcclxcbiAgLS1zaGFkb3ctc29mdDogMCA0cHggMjBweCByZ2JhKDAsMCwwLDAuMDUpO1xcclxcbiAgLS10cmFuc2l0aW9uOiAzMjBtcyBjdWJpYy1iZXppZXIoLjIsLjksLjMsMSk7XFxyXFxuICAvKiB0eXBvZ3JhcGhpYyBzY2FsZSAqL1xcclxcbiAgLS1zdGVwLS0xOiAxMnB4O1xcclxcbiAgLS1zdGVwLTA6IDE0cHg7XFxyXFxuICAtLXN0ZXAtMTogMTZweDtcXHJcXG4gIC0tc3RlcC0yOiAyMHB4O1xcclxcbiAgLS1zdGVwLTM6IDI2cHg7XFxyXFxuICAtLXN0ZXAtNDogMzRweDtcXHJcXG4gIC0tbGVhZDogMThweDtcXHJcXG59XFxyXFxuXFxyXFxuLyogQmFzZSAqL1xcclxcbip7Ym94LXNpemluZzpib3JkZXItYm94fVxcclxcbmh0bWx7Zm9udC1mYW1pbHk6dmFyKC0tZmYtYm9keSk7IGZvbnQtc2l6ZToxNnB4OyBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDt9XFxyXFxuYm9keXtoZWlnaHQ6MTAwJTsgbWFyZ2luOjA7IGNvbG9yOnZhcigtLWNvbG9yLXRleHQpOyBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1iZyk7IGZvbnQtc2l6ZTp2YXIoLS1zdGVwLTEpOyBsaW5lLWhlaWdodDoxLjZ9XFxyXFxuYSxidXR0b257Zm9udC1mYW1pbHk6aW5oZXJpdH1cXHJcXG5pbWd7bWF4LXdpZHRoOjEwMCU7IGRpc3BsYXk6YmxvY2t9XFxyXFxuLndyYXB7bWF4LXdpZHRoOnZhcigtLW1heHcpOyBtYXJnaW46MCBhdXRvOyBwYWRkaW5nOiAwIDJyZW19XFxyXFxuXFxyXFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XFxyXFxuICBmb250LWZhbWlseTogdmFyKC0tZmYtaGVhZGluZyk7XFxyXFxuICBmb250LXdlaWdodDogNzAwO1xcclxcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjAyZW07XFxyXFxufVxcclxcblxcclxcbi8qIEhlYWRlciAqL1xcclxcbi5zaXRlLWhlYWRlcntwb3NpdGlvbjotd2Via2l0LXN0aWNreTtwb3NpdGlvbjpzdGlja3k7IHRvcDoxcmVtOyAtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjogYmx1cigxMHB4KTsgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpOyBiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsMC44KTsgYm9yZGVyLXJhZGl1czp2YXIoLS1yYWRpdXMpOyBib3JkZXI6MXB4IHNvbGlkIHZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyBwYWRkaW5nOjFyZW0gMS41cmVtOyBkaXNwbGF5OmZsZXg7IGFsaWduLWl0ZW1zOmNlbnRlcjsganVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47IHotaW5kZXg6NjA7IHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2Utb3V0OyB3aWR0aDogY2FsYygxMDAlIC0gMnJlbSk7IG1heC13aWR0aDogdmFyKC0tbWF4dyk7IG1hcmdpbjogMXJlbSBhdXRvO31cXHJcXG4uc2l0ZS1oZWFkZXI6bm90KC52aXNpYmxlKSB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTIwJSk7IH1cXHJcXG4uYnJhbmR7ZGlzcGxheTpmbGV4OyBnYXA6MTRweDsgYWxpZ24taXRlbXM6Y2VudGVyfVxcclxcbi5sb2dvLW1hcmt7d2lkdGg6NDhweDsgaGVpZ2h0OjQ4cHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZDp2YXIoLS1jb2xvci1zZWNvbmRhcnkpOyBkaXNwbGF5OmZsZXg7IGFsaWduLWl0ZW1zOmNlbnRlcjsganVzdGlmeS1jb250ZW50OmNlbnRlcjsgY29sb3I6d2hpdGU7IGZvbnQtd2VpZ2h0OjcwMDsgZm9udC1zaXplOjE4cHg7IGZvbnQtZmFtaWx5OiB2YXIoLS1mZi1oZWFkaW5nKTt9XFxyXFxuLmJyYW5kIGgxe2ZvbnQtc2l6ZToxNXB4OyBtYXJnaW46MH1cXHJcXG4uYnJhbmQgcHttYXJnaW46MDsgZm9udC1zaXplOjEzcHg7IGNvbG9yOnZhcigtLW11dGVkKX1cXHJcXG5uYXYucHJpbWFyeXtkaXNwbGF5OmZsZXg7IGdhcDoxMnB4OyBhbGlnbi1pdGVtczpjZW50ZXJ9XFxyXFxuLm5hdi5wcmltYXJ5e2FsaWduLWl0ZW1zOmNlbnRlcn1cXHJcXG4ubmF2LnByaW1hcnkgYXtmb250LXNpemU6MTNweDsgcGFkZGluZzo2cHggOHB4OyBib3JkZXItcmFkaXVzOjhweDsgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlOyBsZXR0ZXItc3BhY2luZzoxcHg7IGZvbnQtd2VpZ2h0OjYwMH1cXHJcXG4ubmF2LnByaW1hcnkgYTo6YWZ0ZXJ7Y29udGVudDonJzsgZGlzcGxheTpibG9jazsgaGVpZ2h0OjJweDsgd2lkdGg6MDsgYmFja2dyb3VuZDp2YXIoLS1hY2NlbnQpOyB0cmFuc2l0aW9uOndpZHRoIDI2MG1zIHZhcigtLXRyYW5zaXRpb24pOyBtYXJnaW4tdG9wOjZweDsgYm9yZGVyLXJhZGl1czoycHh9XFxyXFxuLm5hdi5wcmltYXJ5IGE6aG92ZXI6OmFmdGVye3dpZHRoOjEwMCV9XFxyXFxuLm5hdi5wcmltYXJ5IGE6aG92ZXJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudDsgY29sb3I6IHZhcigtLWNvbG9yLXNlY29uZGFyeSk7fVxcclxcbi5jdGF7YmFja2dyb3VuZDp2YXIoLS1jb2xvci1zZWNvbmRhcnkpOyBjb2xvcjp3aGl0ZTsgcGFkZGluZzo5cHggMTRweDsgYm9yZGVyLXJhZGl1czoxMHB4OyBmb250LXdlaWdodDo3MDA7IHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO31cXHJcXG4uY3RhOmhvdmVyIHsgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYWNjZW50LWFsdCk7IH1cXHJcXG5cXHJcXG4vKiBIZXJvIC8gU2xpZGVyICovXFxyXFxuLmhlcm97ZGlzcGxheTpncmlkOyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6NzAlIDMwJTsgZ3JpZC1nYXA6MjBweDsgZ2FwOjIwcHg7IG1hcmdpbi10b3A6MjBweDsgYWxpZ24taXRlbXM6c3RhcnR9XFxyXFxuLmhlcm8tY2FyZHtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50OyBwYWRkaW5nOjI2cHg7IGJvcmRlci1yYWRpdXM6dmFyKC0tcmFkaXVzKTsgfVxcclxcbi5oZXJvLWNhcmR7cGFkZGluZzo0MHB4IDQycHh9XFxyXFxuLmhlcm8tdGl0bGV7Zm9udC1zaXplOjQycHg7IG1hcmdpbjowIDAgMTJweCAwOyBmb250LXdlaWdodDo4MDA7IGxldHRlci1zcGFjaW5nOi0wLjAyZW19XFxyXFxuLmxlYWR7Zm9udC1zaXplOjE4cHg7IGNvbG9yOnZhcigtLW11dGVkKTsgbWFyZ2luOjAgMCAxOHB4IDA7IG1heC13aWR0aDo2NmNofVxcclxcbi5oZXJvIC5jaGlwc3ttYXJnaW4tdG9wOjE4cHh9XFxyXFxuLmNoaXBze2Rpc3BsYXk6ZmxleDsgZ2FwOjhweDsgZmxleC13cmFwOndyYXA7IG1hcmdpbi10b3A6OHB4fVxcclxcbi5jaGlwe2JhY2tncm91bmQ6dmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7IGJvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7IHBhZGRpbmc6NnB4IDEycHg7IGJvcmRlci1yYWRpdXM6OTk5cHg7IGZvbnQtc2l6ZToxM3B4OyBjb2xvcjp2YXIoLS1jb2xvci10ZXh0KX1cXHJcXG5cXHJcXG4uc2xpZGVyLXdyYXB7YmFja2dyb3VuZDp2YXIoLS1jYXJkKTsgcGFkZGluZzoyMnB4OyBib3JkZXItcmFkaXVzOnZhcigtLXJhZGl1cyk7IGJvcmRlcjoxcHggc29saWQgcmdiYSgxMSwzNyw2NCwwLjA0KTsgYm94LXNoYWRvdzp2YXIoLS1jYXJkLWVsZXYpfVxcclxcbi5zbGlkZXJ7ZGlzcGxheTpmbGV4OyBnYXA6MTRweDsgYWxpZ24taXRlbXM6Y2VudGVyOyBvdmVyZmxvdzpoaWRkZW47IHBvc2l0aW9uOnJlbGF0aXZlfVxcclxcbi5zbGlkZXN7ZGlzcGxheTpmbGV4OyB0cmFuc2l0aW9uOnRyYW5zZm9ybSA1MjBtcyBjdWJpYy1iZXppZXIoLjIsLjksLjMsMSl9XFxyXFxuLmNhcmQtc2xpZGV7bWluLXdpZHRoOjMyMHB4OyBtYXgtd2lkdGg6NDYwcHg7IGJhY2tncm91bmQ6dmFyKC0tY2FyZCk7IGJvcmRlci1yYWRpdXM6MTJweDsgcGFkZGluZzoxOHB4OyBib3gtc2hhZG93OnZhcigtLWNhcmQtZWxldik7IGJvcmRlcjoxcHggc29saWQgcmdiYSgxMSwzNyw2NCwwLjAzKTsgZGlzcGxheTpmbGV4OyBmbGV4LWRpcmVjdGlvbjpjb2x1bW47IGdhcDoxMHB4OyB0cmFuc2l0aW9uOnRyYW5zZm9ybSB2YXIoLS10cmFuc2l0aW9uKSwgYm94LXNoYWRvdyB2YXIoLS10cmFuc2l0aW9uKX1cXHJcXG4uY2FyZC1zbGlkZTpob3Zlcnt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNnB4KTsgYm94LXNoYWRvdzowIDE4cHggNDBweCByZ2JhKDExLDM3LDY0LDAuMDkpfVxcclxcbi5jYXJkLXNsaWRle3dpbGwtY2hhbmdlOnRyYW5zZm9ybX1cXHJcXG4uY2FyZC1zbGlkZSBoM3ttYXJnaW46MDtmb250LXNpemU6MTZweH1cXHJcXG4uY2FyZC1zbGlkZSBwe21hcmdpbjowO2NvbG9yOnZhcigtLW11dGVkKTtmb250LXNpemU6MTRweH1cXHJcXG4uY2FyZC1hY3Rpb25ze21hcmdpbi10b3A6YXV0bzsgZGlzcGxheTpmbGV4OyBnYXA6OHB4fVxcclxcbi5idG57cGFkZGluZzo5cHggMTRweDtib3JkZXItcmFkaXVzOjEwcHg7Ym9yZGVyOjA7Zm9udC13ZWlnaHQ6NzAwO2N1cnNvcjpwb2ludGVyOyB0cmFuc2l0aW9uOmFsbCB2YXIoLS10cmFuc2l0aW9uKX1cXHJcXG4uYnRuLXByaW1hcnl7YmFja2dyb3VuZDp2YXIoLS1hY2NlbnQpOyBjb2xvcjp3aGl0ZTsgYm94LXNoYWRvdzowIDhweCAyMHB4IHJnYmEoMTEsMTA3LDI1NSwwLjEyKX1cXHJcXG4uYnRuLW91dGxpbmV7YmFja2dyb3VuZDp3aGl0ZTtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTEsMzcsNjQsMC4wNCk7Y29sb3I6dmFyKC0tYWNjZW50LTIpfVxcclxcblxcclxcbi5uYXYtY29udHJvbHN7ZGlzcGxheTpmbGV4OyBhbGlnbi1pdGVtczpjZW50ZXI7IGdhcDo4cHh9XFxyXFxuLm5hdi1jb250cm9scyBidXR0b257YmFja2dyb3VuZDp3aGl0ZTtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTEsMzcsNjQsMC4wNCk7cGFkZGluZzo4cHg7Ym9yZGVyLXJhZGl1czoxMHB4O2N1cnNvcjpwb2ludGVyOyB0cmFuc2l0aW9uOmFsbCB2YXIoLS10cmFuc2l0aW9uKX1cXHJcXG4ubmF2LWNvbnRyb2xzIGJ1dHRvbjpob3Zlcnt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtMnB4KX1cXHJcXG5cXHJcXG4vKiBEb3RzICovXFxyXFxuLmRvdHN7ZGlzcGxheTpmbGV4OyBnYXA6OHB4OyBtYXJnaW4tbGVmdDoxMnB4fVxcclxcbi5kb3R7d2lkdGg6MTBweDtoZWlnaHQ6MTBweDtib3JkZXItcmFkaXVzOjUwJTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCg5MGRlZywjZTlmMmZmLCNmMGY5ZjgpfVxcclxcbi5kb3QuYWN0aXZle2JhY2tncm91bmQ6dmFyKC0tYWNjZW50KX1cXHJcXG5cXHJcXG4vKiBDb250ZW50ICYgUGFuZWxzICovXFxyXFxuI2NvbnRlbnQtYXJlYXttYXJnaW4tdG9wOjIwcHg7IGRpc3BsYXk6Z3JpZDsgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmcjsgZ3JpZC1nYXA6MTRweDsgZ2FwOjE0cHh9XFxyXFxuLnBhbmVse2JhY2tncm91bmQ6d2hpdGU7IHBhZGRpbmc6MnJlbTsgYm9yZGVyLXJhZGl1czp2YXIoLS1yYWRpdXMpOyBib3gtc2hhZG93OiB2YXIoLS1zaGFkb3ctc29mdCk7IGRpc3BsYXk6bm9uZX1cXHJcXG4ucGFuZWwuYWN0aXZle2Rpc3BsYXk6YmxvY2t9XFxyXFxuLmNhcmRzLWdyaWR7ZGlzcGxheTpncmlkOyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDIsMWZyKTsgZ3JpZC1nYXA6MTRweDsgZ2FwOjE0cHh9XFxyXFxuLnByb2plY3QtY2FyZHtiYWNrZ3JvdW5kOndoaXRlO2JvcmRlci1yYWRpdXM6MTBweDtwYWRkaW5nOjEycHg7Ym9yZGVyOjFweCBzb2xpZCAjZWVmNGZifVxcclxcblxcclxcbi8qIFNpZGViYXIgKi9cXHJcXG4uc2lkZXtkaXNwbGF5OmZsZXg7IGZsZXgtZGlyZWN0aW9uOmNvbHVtbjsgZ2FwOjE0cHh9XFxyXFxuLmNhcmR7YmFja2dyb3VuZDp3aGl0ZTsgcGFkZGluZzoycmVtOyBib3JkZXItcmFkaXVzOnZhcigtLXJhZGl1cyk7IGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1zb2Z0KTt9XFxyXFxuXFxyXFxuLyogUm9sZXMgLyBUYWJzIHNlY3Rpb24gKi9cXHJcXG4ucm9sZXMtdGFic3ttYXJnaW4tdG9wOjE0cHh9XFxyXFxuLnJvbGVzLW5hdntkaXNwbGF5OmZsZXg7IGdhcDo4cHg7IGZsZXgtd3JhcDp3cmFwOyBtYXJnaW4tYm90dG9tOjE0cHh9XFxyXFxuLnJvbGUtdGFie2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7IGJvcmRlcjoxcHggc29saWQgdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7IHBhZGRpbmc6OHB4IDEycHg7IGJvcmRlci1yYWRpdXM6MTBweDsgY3Vyc29yOnBvaW50ZXI7IGZvbnQtd2VpZ2h0OjcwMDsgZGlzcGxheTppbmxpbmUtZmxleDsgYWxpZ24taXRlbXM6Y2VudGVyOyBnYXA6OHB4OyB0cmFuc2l0aW9uOmFsbCB2YXIoLS10cmFuc2l0aW9uKX1cXHJcXG4ucm9sZS10YWIgLmljb257Zm9udC1zaXplOjE4cHg7IG9wYWNpdHk6MC45NX1cXHJcXG4ucm9sZS10YWIgLmxhYmVse2ZvbnQtd2VpZ2h0OjcwMH1cXHJcXG4ucm9sZS10YWI6aG92ZXJ7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTNweCl9XFxyXFxuLnJvbGUtdGFiLmFjdGl2ZXtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCg5MGRlZyx2YXIoLS1hY2NlbnQpLHZhcigtLWFjY2VudC0zKSk7IGNvbG9yOndoaXRlOyBib3gtc2hhZG93OjAgMTJweCAzMHB4IHJnYmEoMTEsMzcsNjQsMC4wOCl9XFxyXFxuLnJvbGUtdGFiOmZvY3Vze291dGxpbmU6M3B4IHNvbGlkIHJnYmEoMTEsMTA3LDI1NSwwLjEyKTsgb3V0bGluZS1vZmZzZXQ6M3B4fVxcclxcblxcclxcbi8qIFNWRyBpY29uIGNvbG9yICYgc2l6ZSAqL1xcclxcbi5yb2xlLXRhYiBzdmcuaWNvbnt3aWR0aDoxOHB4OyBoZWlnaHQ6MThweDsgY29sb3I6dmFyKC0tbXV0ZWQpOyB0cmFuc2l0aW9uOmNvbG9yIHZhcigtLXRyYW5zaXRpb24pLCB0cmFuc2Zvcm0gdmFyKC0tdHJhbnNpdGlvbil9XFxyXFxuLnJvbGUtdGFiOmhvdmVyIHN2Zy5pY29ue3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0ycHgpfVxcclxcbi5yb2xlLXRhYi5hY3RpdmUgc3ZnLmljb257Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjk1KX1cXHJcXG5cXHJcXG4vKiBoaWRlIGxhYmVscyBvbiB2ZXJ5IHNtYWxsIHNjcmVlbnMgdG8gc2F2ZSBzcGFjZSAqL1xcclxcbkBtZWRpYSAobWF4LXdpZHRoOjUyMHB4KXtcXHJcXG4gIC5yb2xlLXRhYiAubGFiZWx7ZGlzcGxheTpub25lfVxcclxcbn1cXHJcXG5cXHJcXG4ucm9sZXMtcGFuZWxze3Bvc2l0aW9uOnJlbGF0aXZlOyBtaW4taGVpZ2h0OjIwMHB4OyBiYWNrZ3JvdW5kOiB3aGl0ZTsgYm9yZGVyLXJhZGl1czogdmFyKC0tcmFkaXVzKTsgcGFkZGluZzogMnJlbTsgYm94LXNoYWRvdzogdmFyKC0tc2hhZG93LXNvZnQpO31cXHJcXG4ucm9sZS1wYW5lbHtwb3NpdGlvbjphYnNvbHV0ZTsgaW5zZXQ6MDsgb3BhY2l0eTowOyB0cmFuc2Zvcm06dHJhbnNsYXRlWSg4cHgpOyB0cmFuc2l0aW9uOmFsbCAzMjBtcyBjdWJpYy1iZXppZXIoLjIsLjksLjMsMSk7IHBvaW50ZXItZXZlbnRzOm5vbmV9XFxyXFxuLnJvbGUtcGFuZWwuYWN0aXZle29wYWNpdHk6MTsgdHJhbnNmb3JtOm5vbmU7IHBvaW50ZXItZXZlbnRzOmF1dG87IHBvc2l0aW9uOnJlbGF0aXZlfVxcclxcbi5yb2xlLWNvbnRlbnR7ZGlzcGxheTpncmlkOyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6MWZyOyBncmlkLWdhcDoxNnB4OyBnYXA6MTZweH1cXHJcXG4ucm9sZS1oZXJve2Rpc3BsYXk6ZmxleDsgZmxleC1kaXJlY3Rpb246Y29sdW1uOyBnYXA6OHB4fVxcclxcbi5wcm9qZWN0cy1saXN0e2Rpc3BsYXk6Z3JpZDsgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdCgzLDFmcik7IGdyaWQtZ2FwOjEycHg7IGdhcDoxMnB4fVxcclxcbi5wcm9qZWN0LWNhcmQtc21hbGx7YmFja2dyb3VuZDp2YXIoLS1jYXJkKTsgYm9yZGVyLXJhZGl1czoxMHB4OyBwYWRkaW5nOjEwcHg7IGJvcmRlcjoxcHggc29saWQgcmdiYSgxMSwzNyw2NCwwLjA0KX1cXHJcXG4ucHJvamVjdC1jYXJkLXNtYWxse3Bvc2l0aW9uOnJlbGF0aXZlOyBvdmVyZmxvdzpoaWRkZW59XFxyXFxuLnByb2plY3QtY2FyZC1zbWFsbCBpbWd7aGVpZ2h0OjEyMHB4OyBvYmplY3QtZml0OmNvdmVyOyBib3JkZXItcmFkaXVzOjhweDsgdHJhbnNpdGlvbjp0cmFuc2Zvcm0gNDIwbXMgdmFyKC0tdHJhbnNpdGlvbil9XFxyXFxuLnByb2plY3QtY2FyZC1zbWFsbDo6YWZ0ZXJ7Y29udGVudDonJzsgcG9zaXRpb246YWJzb2x1dGU7IGluc2V0OjA7IGJhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgcmdiYSgxMSwzNyw2NCwwLjApLCByZ2JhKDExLDM3LDY0LDAuMDgpKTsgcG9pbnRlci1ldmVudHM6bm9uZTsgb3BhY2l0eTowOyB0cmFuc2l0aW9uOm9wYWNpdHkgMzIwbXMgdmFyKC0tdHJhbnNpdGlvbil9XFxyXFxuLnByb2plY3QtY2FyZC1zbWFsbDpob3ZlciBpbWd7dHJhbnNmb3JtOnNjYWxlKDEuMDQpIHRyYW5zbGF0ZVkoLTRweCl9XFxyXFxuLnByb2plY3QtY2FyZC1zbWFsbDpob3Zlcjo6YWZ0ZXJ7b3BhY2l0eToxfVxcclxcbi5wcm9qZWN0LWNhcmQtc21hbGwgLnByb2plY3QtbWV0YXtwYWRkaW5nOjEwcHh9XFxyXFxuXFxyXFxuLyogdGlsdCBob3ZlciAtIGhhcmR3YXJlIGFjY2VsZXJhdGVkICovXFxyXFxuLnByb2plY3QtY2FyZC1zbWFsbC50aWx0e3RyYW5zZm9ybS1zdHlsZTpwcmVzZXJ2ZS0zZDsgdHJhbnNpdGlvbjp0cmFuc2Zvcm0gMjgwbXMgdmFyKC0tdHJhbnNpdGlvbil9XFxyXFxuXFxyXFxuLyogZmVhdHVyZWQgaW1hZ2Ugc3VidGxlIHBhcmFsbGF4ICovXFxyXFxuLmZlYXR1cmVkLWltZy13cmFwe292ZXJmbG93OmhpZGRlbn1cXHJcXG4uZmVhdHVyZWQtaW1ne3RyYW5zaXRpb246dHJhbnNmb3JtIDUyMG1zIHZhcigtLXRyYW5zaXRpb24pfVxcclxcbi5mZWF0dXJlZDpob3ZlciAuZmVhdHVyZWQtaW1ne3RyYW5zZm9ybTpzY2FsZSgxLjAzKSB0cmFuc2xhdGVZKC02cHgpfVxcclxcbi5za2lsbHMtbGlzdHtkaXNwbGF5OmZsZXg7IGdhcDo4cHg7IGZsZXgtd3JhcDp3cmFwfVxcclxcbi5za2lsbC1waWxse2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywjZmZmLCNmYmZkZmYpOyBib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTEsMzcsNjQsMC4wNCk7IHBhZGRpbmc6NnB4IDEwcHg7IGJvcmRlci1yYWRpdXM6OTk5cHg7IGZvbnQtc2l6ZToxM3B4fVxcclxcbi8qXFxyXFxuIEhpZ2gtY29udHJhc3Qgc2tpbGwgYmFkZ2VzIFxcclxcbi5za2lsbC1waWxseyBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1wcmltYXJ5KTsgY29sb3I6IHdoaXRlOyBib3JkZXI6MDsgcGFkZGluZzo2cHggMTBweDsgYm9yZGVyLXJhZGl1czo5OTlweDsgZm9udC1zaXplOjEzcHg7IGZvbnQtd2VpZ2h0OjYwMDsgYm94LXNoYWRvdzogMCA2cHggMThweCByZ2JhKDExLDM3LDY0LDAuMDgpO30gXFxyXFxuLnNraWxsLXBpbGwuYWx0eyBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1zZWNvbmRhcnkpOyBjb2xvcjogd2hpdGU7IH1cXHJcXG4qL1xcclxcbi8qIE1ha2UgaGVybyBjaGlwcyBtb3JlIGxlZ2libGUgXFxyXFxuLmNoaXB7IGJhY2tncm91bmQ6IHJnYmEoMTEsMzcsNjQsMC4wOCk7IGNvbG9yOiB2YXIoLS1jb2xvci10ZXh0KTsgYm9yZGVyOjA7IGZvbnQtd2VpZ2h0OjYwMCB9XFxyXFxuKi9cXHJcXG5cXHJcXG4vKiBGZWF0dXJlZCBwcm9qZWN0IGxheW91dCAqL1xcclxcbi5mZWF0dXJlZC1wcm9qZWN0c3tkaXNwbGF5OmdyaWQ7IGdyaWQtdGVtcGxhdGUtY29sdW1uczoyZnIgMWZyOyBncmlkLWdhcDoxNnB4OyBnYXA6MTZweDsgYWxpZ24taXRlbXM6c3RhcnR9XFxyXFxuLmZlYXR1cmVke2Rpc3BsYXk6ZmxleDsgZ2FwOjE2cHg7IGJhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywjZmZmLCNmYmZkZmYpOyBib3JkZXItcmFkaXVzOjEycHg7IG92ZXJmbG93OmhpZGRlbjsgYm94LXNoYWRvdzp2YXIoLS1jYXJkLWVsZXYpOyBib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTEsMzcsNjQsMC4wNCl9XFxyXFxuLmZlYXR1cmVkLWltZy13cmFwe3dpZHRoOjU2JTsgZGlzcGxheTpibG9jazsgYmFja2dyb3VuZDojZWVmNGZifVxcclxcbi5mZWF0dXJlZC1pbWd7d2lkdGg6MTAwJTsgaGVpZ2h0OjEwMCU7IG9iamVjdC1maXQ6Y292ZXI7IGRpc3BsYXk6YmxvY2s7IG1pbi1oZWlnaHQ6MjIwcHh9XFxyXFxuLmZlYXR1cmVkLWluZm97cGFkZGluZzoxNnB4OyBkaXNwbGF5OmZsZXg7IGZsZXgtZGlyZWN0aW9uOmNvbHVtbjsgZ2FwOjhweH1cXHJcXG4uZmVhdHVyZWQtaW5mbyBoNHttYXJnaW46MH1cXHJcXG4uYXNpZGUtc21hbGx7ZGlzcGxheTpmbGV4OyBmbGV4LWRpcmVjdGlvbjpjb2x1bW47IGdhcDoxMnB4fVxcclxcbi5wcm9qZWN0LWNhcmQtc21hbGwgaW1ne3dpZHRoOjEwMCU7IGhlaWdodDoxMDBweDsgb2JqZWN0LWZpdDpjb3ZlcjsgYm9yZGVyLXJhZGl1czo4cHh9XFxyXFxuLnRlY2gtYmFkZ2Vze2Rpc3BsYXk6ZmxleDsgZ2FwOjhweDsgZmxleC13cmFwOndyYXA7IG1hcmdpbi10b3A6OHB4fVxcclxcblxcclxcbi8qIHBhbmVsIHNsaWRlIGFuaW1hdGlvbnMgKGxlZnQgLyByaWdodCkgKi9cXHJcXG4uYW5pbS1lbnRlci1yaWdodHt0cmFuc2Zvcm06dHJhbnNsYXRlWCgxOHB4KTsgb3BhY2l0eTowfVxcclxcbi5hbmltLWVudGVyLWxlZnR7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTE4cHgpOyBvcGFjaXR5OjB9XFxyXFxuLmFuaW0tZW50ZXItYWN0aXZle3RyYW5zZm9ybTpub25lOyBvcGFjaXR5OjE7IHRyYW5zaXRpb246dHJhbnNmb3JtIDQyMG1zIHZhcigtLXRyYW5zaXRpb24pLCBvcGFjaXR5IDQyMG1zIHZhcigtLXRyYW5zaXRpb24pfVxcclxcbi5hbmltLWV4aXQtcmlnaHR7dHJhbnNmb3JtOm5vbmU7IG9wYWNpdHk6MX1cXHJcXG4uYW5pbS1leGl0LWxlZnR7dHJhbnNmb3JtOm5vbmU7IG9wYWNpdHk6MX1cXHJcXG4uYW5pbS1leGl0LWFjdGl2ZS5hbmltLWV4aXQtcmlnaHR7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTE4cHgpOyBvcGFjaXR5OjA7IHRyYW5zaXRpb246dHJhbnNmb3JtIDQyMG1zIHZhcigtLXRyYW5zaXRpb24pLCBvcGFjaXR5IDQyMG1zIHZhcigtLXRyYW5zaXRpb24pfVxcclxcbi5hbmltLWV4aXQtYWN0aXZlLmFuaW0tZXhpdC1sZWZ0e3RyYW5zZm9ybTp0cmFuc2xhdGVYKDE4cHgpOyBvcGFjaXR5OjA7IHRyYW5zaXRpb246dHJhbnNmb3JtIDQyMG1zIHZhcigtLXRyYW5zaXRpb24pLCBvcGFjaXR5IDQyMG1zIHZhcigtLXRyYW5zaXRpb24pfVxcclxcblxcclxcbi8qIGxpZ2h0IC8gZGFyayBwYW5lbCB2YXJpYW50cyAqL1xcclxcbi5yb2xlLXBhbmVsLmxpZ2h0e2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywjZmZmZmZmLCNmYmZkZmYpfVxcclxcbi5yb2xlLXBhbmVsLmRhcmt7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCMwYjEyMjAsIzA3MTAyMSk7IGNvbG9yOiNlNmVlZjh9XFxyXFxuLnJvbGUtcGFuZWwuZGFyayAubXV0ZWR7Y29sb3I6cmdiYSgyMzAsMjM4LDI0OCwwLjc1KX1cXHJcXG5cXHJcXG5AbWVkaWEgKG1heC13aWR0aDo5ODBweCl7XFxyXFxuICAuZmVhdHVyZWQtcHJvamVjdHN7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmcjt9XFxyXFxuICAuZmVhdHVyZWQtaW1ne21pbi1oZWlnaHQ6MTYwcHg7IHdpZHRoOjEwMCV9XFxyXFxuICAucHJvamVjdHMtbGlzdHtncmlkLXRlbXBsYXRlLWNvbHVtbnM6MWZyfVxcclxcbn1cXHJcXG5cXHJcXG4vKiBBY2NvcmRpb25zIChjZXJ0aWZpY2FjaW9uZXMpICovXFxyXFxuLmFjY29yZGlvbntib3JkZXItcmFkaXVzOjEwcHg7IG92ZXJmbG93OmhpZGRlbn1cXHJcXG4uYWNjLWl0ZW17Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2VlZjRmYn1cXHJcXG4uYWNjLWl0ZW0gYnV0dG9ue2JhY2tncm91bmQ6d2hpdGU7IHdpZHRoOjEwMCU7IHBhZGRpbmc6MTJweDsgdGV4dC1hbGlnbjpsZWZ0OyBib3JkZXI6MDsgZm9udC13ZWlnaHQ6NjAwfVxcclxcbi5hY2MtaXRlbSAucGFuZWx7ZGlzcGxheTpub25lOyBwYWRkaW5nOjEycHg7IGNvbG9yOnZhcigtLW11dGVkKTsgZm9udC1zaXplOjEzcHh9XFxyXFxuXFxyXFxuLyogQ29udGFjdCBmb3JtICovXFxyXFxuZm9ybS5jb250YWN0e2Rpc3BsYXk6Z3JpZDsgZ3JpZC1nYXA6OHB4OyBnYXA6OHB4fVxcclxcbmlucHV0LCB0ZXh0YXJlYXt3aWR0aDoxMDAlOyBwYWRkaW5nOjEwcHg7IGJvcmRlci1yYWRpdXM6OHB4OyBib3JkZXI6MXB4IHNvbGlkIHZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1iZyk7IHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2U7fVxcclxcbmlucHV0OmZvY3VzLCB0ZXh0YXJlYTpmb2N1cyB7IGJvcmRlci1jb2xvcjogdmFyKC0tY29sb3Itc2Vjb25kYXJ5KTsgb3V0bGluZTogbm9uZTsgfVxcclxcbmJ1dHRvbi5zZW5ke2JhY2tncm91bmQ6dmFyKC0tY29sb3Itc2Vjb25kYXJ5KTsgY29sb3I6d2hpdGU7IHBhZGRpbmc6MTJweDsgYm9yZGVyLXJhZGl1czo4cHg7IGJvcmRlcjowOyBmb250LXdlaWdodDogNzAwOyB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTt9XFxyXFxuYnV0dG9uLnNlbmQ6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1hY2NlbnQtYWx0KTsgfVxcclxcblxcclxcbi8qIEZvb3RlciAqL1xcclxcbmZvb3RlcnttYXJnaW4tdG9wOjMycHg7IHBhZGRpbmc6MThweCAwOyB0ZXh0LWFsaWduOmNlbnRlcjsgY29sb3I6dmFyKC0tbXV0ZWQpOyBmb250LXNpemU6MTNweH1cXHJcXG5cXHJcXG4vKiBSZXNwb25zaXZlIHR3ZWFrcyAqL1xcclxcbkBtZWRpYSAobWF4LXdpZHRoOjk4MHB4KXtcXHJcXG4gIC5zbGlkZXN7Z2FwOjEycHh9XFxyXFxuICAuY2FyZC1zbGlkZXttaW4td2lkdGg6MjgwcHh9XFxyXFxuICAuY2FyZHMtZ3JpZHtncmlkLXRlbXBsYXRlLWNvbHVtbnM6MWZyfVxcclxcbiAgLyogU3RhY2sgaGVybyBjb2x1bW5zIG9uIG5hcnJvdyBzY3JlZW5zICovXFxyXFxuICAuaGVyb3tncmlkLXRlbXBsYXRlLWNvbHVtbnM6MWZyfVxcclxcbiAgaHRtbHtmb250LXNpemU6MTVweH1cXHJcXG4gIC5oZXJvLXRpdGxle2ZvbnQtc2l6ZToyOHB4fVxcclxcbiAgLmxlYWR7Zm9udC1zaXplOjE1cHh9XFxyXFxufVxcclxcblxcclxcbkBtZWRpYSAobWF4LXdpZHRoOjkyMHB4KXtcXHJcXG4gIC5ncmlkLXByb2plY3Rze2dyaWQtdGVtcGxhdGUtY29sdW1uczoxZnJ9XFxyXFxuICAud3JhcHtwYWRkaW5nOjEycHh9XFxyXFxuICBoZWFkZXIuc2l0ZS1oZWFkZXJ7ZmxleC1kaXJlY3Rpb246Y29sdW1uOyBnYXA6MTJweDsgYWxpZ24taXRlbXM6ZmxleC1zdGFydH1cXHJcXG59XFxyXFxuXFxyXFxuLyogQW5pbWF0aW9ucyAmIGFjY2Vzc2liaWxpdHkgKi9cXHJcXG4ucmV2ZWFse29wYWNpdHk6MDsgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoMTBweCk7IHRyYW5zaXRpb246YWxsIDUyMG1zIGN1YmljLWJlemllciguMiwuOSwuMywxKX1cXHJcXG4ucmV2ZWFsLnZpc2libGV7b3BhY2l0eToxOyB0cmFuc2Zvcm06bm9uZX1cXHJcXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSl7XFxyXFxuICAqLCAqOjpiZWZvcmUsICo6OmFmdGVye3RyYW5zaXRpb246bm9uZSAhaW1wb3J0YW50OyBhbmltYXRpb246bm9uZSAhaW1wb3J0YW50fVxcclxcbn1cXHJcXG46Zm9jdXN7b3V0bGluZTpub25lfVxcclxcbjpmb2N1cy12aXNpYmxle291dGxpbmU6M3B4IHNvbGlkIHJnYmEoMTEsMTA3LDI1NSwwLjE0KTsgb3V0bGluZS1vZmZzZXQ6M3B4fVxcclxcblxcclxcbi8qIEZsb2F0aW5nIHN0aWNrZXIgYmFkZ2UgKi9cXHJcXG4jc3RpY2tlci1iYWRnZXtwb3NpdGlvbjpmaXhlZDsgcmlnaHQ6MThweDsgYm90dG9tOjE4cHg7IHdpZHRoOjY0cHg7IGhlaWdodDo2NHB4OyBib3JkZXItcmFkaXVzOjk5OXB4OyBwYWRkaW5nOjZweDsgYm9yZGVyOjJweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LDAuOTIpOyBiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsI2ZmZiwjZmZmKTsgYm94LXNoYWRvdzowIDhweCAyNHB4IHJnYmEoMTIsMTgsMzYsMC4xOCk7IGRpc3BsYXk6aW5saW5lLWdyaWQ7IHBsYWNlLWl0ZW1zOmNlbnRlcjsgei1pbmRleDoxMjAwOyBjdXJzb3I6cG9pbnRlcjsgdHJhbnNpdGlvbjp0cmFuc2Zvcm0gLjE4cyBlYXNlLCBib3gtc2hhZG93IC4xOHMgZWFzZX1cXHJcXG4jc3RpY2tlci1iYWRnZSBpbWd7d2lkdGg6MTAwJTsgaGVpZ2h0OjEwMCU7IGJvcmRlci1yYWRpdXM6OTk5cHg7IGRpc3BsYXk6YmxvY2s7IG9iamVjdC1maXQ6Y292ZXJ9XFxyXFxuI3N0aWNrZXItYmFkZ2Ugc3Zne3dpZHRoOjEwMCU7IGhlaWdodDoxMDAlOyBib3JkZXItcmFkaXVzOjk5OXB4fVxcclxcbiNzdGlja2VyLWJhZGdlOmZvY3VzLCAjc3RpY2tlci1iYWRnZTpmb2N1cy12aXNpYmxle291dGxpbmU6M3B4IHNvbGlkIHZhcigtLWFjY2VudCk7IHRyYW5zZm9ybTp0cmFuc2xhdGVZKC0zcHgpIHNjYWxlKDEuMDIpfVxcclxcbiNzdGlja2VyLWJhZGdlOmhvdmVye3RyYW5zZm9ybTp0cmFuc2xhdGVZKC00cHgpOyBib3gtc2hhZG93OjAgMTRweCAzOHB4IHJnYmEoMTIsMTgsMzYsMC4yMil9XFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6NjQwcHgpeyNzdGlja2VyLWJhZGdle3JpZ2h0OjEycHg7IGJvdHRvbToxMnB4OyB3aWR0aDo1NnB4OyBoZWlnaHQ6NTZweH19XFxyXFxuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpeyNzdGlja2VyLWJhZGdle3RyYW5zaXRpb246bm9uZTsgdHJhbnNmb3JtOm5vbmV9fVxcclxcbi5oaWRkZW57ZGlzcGxheTpub25lICFpbXBvcnRhbnR9XFxyXFxuXFxyXFxuLyogRGFyayB0aGVtZSBvdmVycmlkZXMgKi9cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl17XFxyXFxuICAtLWNvbG9yLXByaW1hcnk6ICNGRkZGRkY7XFxyXFxuICAtLWNvbG9yLXNlY29uZGFyeTogIzZDNjNGRjtcXHJcXG4gIC0tY29sb3ItYWNjZW50LWFsdDogI0ZGNzg0OTtcXHJcXG4gIC0tY29sb3ItbmV1dHJhbC1saWdodDogIzJhMmEyYTtcXHJcXG4gIC0tY29sb3ItbmV1dHJhbC1kYXJrOiAjYTBhMGEwO1xcclxcbiAgLS1jb2xvci1iZzogIzBmMGYwZjtcXHJcXG4gIC0tY29sb3ItdGV4dDogI0VBRUFFQTtcXHJcXG59XFxyXFxuXFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIGJvZHl7IGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICMxYTFhMWEsICMwZjBmMGYpOyBjb2xvcjp2YXIoLS1jb2xvci10ZXh0KTsgfVxcclxcblxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuc2l0ZS1oZWFkZXJ7IGJhY2tncm91bmQ6IHJnYmEoMjYsMjYsMjYsMC44KTsgYm9yZGVyOjFweCBzb2xpZCB2YXIoLS1jb2xvci1uZXV0cmFsLWxpZ2h0KTsgfVxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuY2FyZCB7IGJhY2tncm91bmQ6ICMxYTFhMWE7IGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyBib3gtc2hhZG93OiBub25lOyB9XFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC5oZXJvLWNhcmQgeyBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfVxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuY2hpcCB7IGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyBjb2xvcjogdmFyKC0tY29sb3ItdGV4dCk7IH1cXHJcXG46cm9vdFtkYXRhLXQgaGVtZT1cXFwiZGFya1xcXCJdIC5yb2xlLXRhYiB7IGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyBib3JkZXItY29sb3I6IHZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyB9XFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC5yb2xlLXRhYi5hY3RpdmUgeyBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1zZWNvbmRhcnkpOyBib3JkZXItY29sb3I6IHZhcigtLWNvbG9yLXNlY29uZGFyeSk7IH1cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLnJvbGVzLXBhbmVscyB7IGJhY2tncm91bmQ6ICMxYTFhMWE7IGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyBib3gtc2hhZG93OiBub25lOyB9XFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIGlucHV0LCA6cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gdGV4dGFyZWEgeyBiYWNrZ3JvdW5kOiAjMGYwZjBmOyBib3JkZXItY29sb3I6IHZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyBjb2xvcjogdmFyKC0tY29sb3ItdGV4dCk7IH1cXHJcXG5cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLm1vZGFsLW1lZGlhe2JhY2tncm91bmQ6IzA3MTAyMX1cXHJcXG5cXHJcXG4vKiBEYXJrLW1vZGUgZml4ZXMgZm9yIHNsaWRlciBhbmQgVUkgY2hyb21lIHRoYXQgdXNlZCBoYXJkLWNvZGVkIGxpZ2h0IGNvbG9ycyAqL1xcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuZG90eyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIzEyMzQ0NywjMGIyNDMzKTsgfVxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuZG90LmFjdGl2ZXsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLHZhcigtLWFjY2VudCksIHZhcigtLWFjY2VudC0zKSk7IH1cXHJcXG5cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLm5hdi1jb250cm9scyBidXR0b257IGJhY2tncm91bmQ6IHJnYmEoMjU1LDI1NSwyNTUsMC4wMik7IGJvcmRlcjoxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwwLjA0KTsgY29sb3I6dmFyKC0tYWNjZW50LTIpOyBib3gtc2hhZG93Om5vbmUgfVxcclxcblxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuY2FyZC1zbGlkZSBoMyxcXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLmNhcmQtc2xpZGUgcCxcXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLnByb2plY3QtY2FyZC1zbWFsbCAubXV0ZWQsXFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC50aW55eyBjb2xvcjp2YXIoLS1tdXRlZCkgfVxcclxcblxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuYnRuLW91dGxpbmV7IGJhY2tncm91bmQ6dHJhbnNwYXJlbnQ7IGJvcmRlcjoxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwwLjA0KTsgY29sb3I6dmFyKC0tYWNjZW50LTIpIH1cXHJcXG5cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLmFjYy1pdGVtIGJ1dHRvbnsgYmFja2dyb3VuZDp0cmFuc3BhcmVudDsgY29sb3I6dmFyKC0tYWNjZW50LTIpIH1cXHJcXG5cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLnByb2plY3QtY2FyZC1zbWFsbDo6YWZ0ZXJ7IGJhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgcmdiYSgwLDAsMCwwLjA4KSwgcmdiYSgwLDAsMCwwLjE4KSk7IH1cXHJcXG5cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLmRvdHN7IGZpbHRlcjpicmlnaHRuZXNzKDAuOSk7IH1cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4vKiBUaGVtZSB0b2dnbGUgKi9cXHJcXG4udGhlbWUtdG9nZ2xle21hcmdpbi1sZWZ0OjEycHg7IGJhY2tncm91bmQ6dHJhbnNwYXJlbnQ7IGJvcmRlcjowOyBmb250LXNpemU6MThweDsgY3Vyc29yOnBvaW50ZXI7IHBhZGRpbmc6OHB4OyBib3JkZXItcmFkaXVzOjhweH1cXHJcXG4udGhlbWUtdG9nZ2xlOmZvY3Vze291dGxpbmU6M3B4IHNvbGlkIHJnYmEoMTEsMTA3LDI1NSwwLjEyKX1cXHJcXG5cXHJcXG4vKiBNb2RhbCAqL1xcclxcbi5tb2RhbHtwb3NpdGlvbjpmaXhlZDsgaW5zZXQ6MDsgZGlzcGxheTpub25lOyBhbGlnbi1pdGVtczpjZW50ZXI7IGp1c3RpZnktY29udGVudDpjZW50ZXI7IGJhY2tncm91bmQ6cmdiYSg1LDEwLDE4LDAuNTUpOyB6LWluZGV4OjE0MDB9XFxyXFxuLm1vZGFsLmFjdGl2ZXtkaXNwbGF5OmZsZXh9XFxyXFxuLm1vZGFsIC5mcmFtZXtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50OyBtYXgtd2lkdGg6MTEwMHB4OyB3aWR0aDpjYWxjKDEwMCUgLSA0OHB4KTsgYm9yZGVyLXJhZGl1czoxMnB4OyBwb3NpdGlvbjpyZWxhdGl2ZX1cXHJcXG4ubW9kYWwtbWVkaWF7YmFja2dyb3VuZDojMDcxMDIxOyBib3JkZXItcmFkaXVzOjEycHg7IG92ZXJmbG93OmhpZGRlbn1cXHJcXG4ubW9kYWwtbWVkaWEgaW1ne3dpZHRoOjEwMCU7IGhlaWdodDphdXRvOyBkaXNwbGF5OmJsb2NrOyBvYmplY3QtZml0OmNvdmVyfVxcclxcbi5tb2RhbC1jYXB0aW9ue3BhZGRpbmc6MTRweDsgYmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDI1NSwyNTUsMjU1LDAuOTgpLCByZ2JhKDI1NSwyNTUsMjU1LDAuOTYpKTsgYm9yZGVyLXJhZGl1czowIDAgMTJweCAxMnB4OyBjb2xvcjp2YXIoLS1hY2NlbnQtMil9XFxyXFxuLm1vZGFsLWNsb3Nle3Bvc2l0aW9uOmFic29sdXRlOyByaWdodDo4cHg7IHRvcDo4cHg7IGJhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwwLjkpOyBib3JkZXI6MDsgcGFkZGluZzo4cHggMTBweDsgYm9yZGVyLXJhZGl1czo4cHg7IGN1cnNvcjpwb2ludGVyfVxcclxcblxcclxcbi8qIEhlcm8gd2l0aCBiYWNrZ3JvdW5kIG1lZGlhIHBsYWNlaG9sZGVyICovXFxyXFxuLmhlcm97cG9zaXRpb246cmVsYXRpdmU7IG92ZXJmbG93OnZpc2libGV9XFxyXFxuLmhlcm86OmJlZm9yZXtjb250ZW50OicnOyBwb3NpdGlvbjphYnNvbHV0ZTsgaW5zZXQ6MDsgei1pbmRleDotMTsgYmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDYsMTEsMjAsMC4wNCksIHJnYmEoMjU1LDI1NSwyNTUsMCkpOyBwb2ludGVyLWV2ZW50czpub25lfVxcclxcbi5oZXJvLW1lZGlhe3Bvc2l0aW9uOmFic29sdXRlOyByaWdodDowOyB0b3A6MDsgd2lkdGg6NDYlOyBoZWlnaHQ6MTAwJTsgYm9yZGVyLXJhZGl1czoxMnB4OyBvdmVyZmxvdzpoaWRkZW47IGZpbHRlcjpjb250cmFzdCgxMDUlKSBzYXR1cmF0ZSgxMDUlKTsgb3BhY2l0eTowLjk1fVxcclxcbi5oZXJvLW1lZGlhIGltZywgLmhlcm8tbWVkaWEgdmlkZW97d2lkdGg6MTAwJTsgaGVpZ2h0OjEwMCU7IG9iamVjdC1maXQ6Y292ZXI7IGRpc3BsYXk6YmxvY2t9XFxyXFxuXFxyXFxuLyogRWRpdG9yaWFsIHNwYWNpbmcgKi9cXHJcXG4ud3JhcHttYXgtd2lkdGg6MTIwMHB4OyBtYXJnaW46NDBweCBhdXRvOyBwYWRkaW5nOjI4cHh9XFxyXFxuLmhlcm8tY2FyZHtwYWRkaW5nOjQ4cHh9XFxyXFxuLmhlcm8tdGl0bGV7Zm9udC1zaXplOjUycHh9XFxyXFxuLmxlYWR7Zm9udC1zaXplOjIwcHg7IG1heC13aWR0aDo3MGNofVxcclxcblxcclxcbi8qIEN1cnNvciB0cmFja2luZyBhY2NlbnQgKHN1YnRsZSkgKi9cXHJcXG4uY3Vyc29yLWFjY2VudHtwb3NpdGlvbjpmaXhlZDsgcG9pbnRlci1ldmVudHM6bm9uZTsgd2lkdGg6MjIwcHg7IGhlaWdodDoyMjBweDsgYm9yZGVyLXJhZGl1czoyMHB4OyBtaXgtYmxlbmQtbW9kZTptdWx0aXBseTsgdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpIHNjYWxlKDAuMTgpOyB0cmFuc2l0aW9uOnRyYW5zZm9ybSAuMjhzIGVhc2UsIG9wYWNpdHkgLjRzIGVhc2U7IG9wYWNpdHk6MH1cXHJcXG4uY3Vyc29yLWFjY2VudC5zaG93e29wYWNpdHk6MC45NX1cXHJcXG5cXHJcXG5AbWVkaWEgKG1heC13aWR0aDo5ODBweCl7XFxyXFxuICAuaGVyby1tZWRpYXtkaXNwbGF5Om5vbmV9XFxyXFxuICAuaGVyb3tncmlkLXRlbXBsYXRlLWNvbHVtbnM6MWZyfVxcclxcbiAgLmhlcm8tdGl0bGV7Zm9udC1zaXplOjM0cHh9XFxyXFxufVxcclxcbi8qID09PT09IEV4cGVyaWVuY2lhIGxhYm9yYWwgPT09PT0gKi9cXHJcXG4ueHAtbGlzdCB7XFxyXFxuICBkaXNwbGF5OiBncmlkO1xcclxcbiAgZ3JpZC1nYXA6IDFyZW07XFxyXFxuICBnYXA6IDFyZW07XFxyXFxuICBtYXJnaW4tdG9wOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4ueHAge1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7XFxyXFxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1yYWRpdXMpO1xcclxcbiAgcGFkZGluZzogMS41cmVtO1xcclxcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XFxyXFxufVxcclxcbi54cDpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC4wMik7IH1cXHJcXG5cXHJcXG4ueHAtaGVhZGVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LXdyYXA6IHdyYXA7XFxyXFxuICBnYXA6IDhweCAxMnB4O1xcclxcbiAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbn1cXHJcXG5cXHJcXG4ueHAtdGl0bGUgeyBmb250LXdlaWdodDogNzAwOyB9XFxyXFxuLnhwLWJvZHkgeyBtYXJnaW46IDhweCAwIDAgMThweDsgfVxcclxcbi54cC1ib2R5IGxpIHsgbWFyZ2luLWJvdHRvbTogNnB4OyB9XFxyXFxuXFxyXFxuLyogVmFyaWFudGUg4oCcbMOtbmVhIGRlIHRpZW1wb+KAnSAoYWN0w612YWxhIGHDsWFkaWVuZG8gY2xhc3M9XFxcInJldmVhbCB0aW1lbGluZVxcXCIgYWwgc2VjdGlvbiNleHBlcmllbmNpYSkgKi9cXHJcXG4jZXhwZXJpZW5jaWEudGltZWxpbmUgLnhwLWxpc3QgeyBcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgXFxyXFxuICBwYWRkaW5nLWxlZnQ6IDE4cHg7IFxcclxcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCBjdXJyZW50Q29sb3I7IFxcclxcbiAgb3BhY2l0eTogLjk7XFxyXFxufVxcclxcbiNleHBlcmllbmNpYS50aW1lbGluZSAueHAgeyBwb3NpdGlvbjogcmVsYXRpdmU7IH1cXHJcXG4jZXhwZXJpZW5jaWEudGltZWxpbmUgLnhwOjpiZWZvcmUge1xcclxcbiAgY29udGVudDogXFxcIlxcXCI7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBsZWZ0OiAtMTBweDtcXHJcXG4gIHRvcDogMThweDtcXHJcXG4gIHdpZHRoOiAxMnB4OyBoZWlnaHQ6IDEycHg7IGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcXHJcXG4gIG9wYWNpdHk6IC45O1xcclxcbn1cXHJcXG5cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLnhwIHtcXHJcXG4gIGJvcmRlci1jb2xvcjogdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7XFxyXFxufVxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAueHA6aG92ZXIge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjAzKTtcXHJcXG59XFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdICNleHBlcmllbmNpYS50aW1lbGluZSAueHAtbGlzdCB7XFxyXFxuICBib3JkZXItbGVmdC1jb2xvcjogdmFyKC0tY29sb3ItbmV1dHJhbC1kYXJrKTtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7OztDQUlDO0FBQ0Q7RUFDRSxzQkFBc0I7RUFDdEIsd0JBQXdCO0VBQ3hCLDBCQUEwQjtFQUMxQiwyQkFBMkI7RUFDM0IsOEJBQThCO0VBQzlCLDZCQUE2QjtFQUM3QixtQkFBbUI7RUFDbkIscUJBQXFCOztFQUVyQixlQUFlO0VBQ2YsK0RBQStEO0VBQy9ELG9EQUFvRDs7RUFFcEQsd0JBQXdCO0VBQ3hCLGNBQWM7RUFDZCxjQUFjO0VBQ2QsMENBQTBDO0VBQzFDLDRDQUE0QztFQUM1QyxzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLGNBQWM7RUFDZCxjQUFjO0VBQ2QsY0FBYztFQUNkLGNBQWM7RUFDZCxjQUFjO0VBQ2QsWUFBWTtBQUNkOztBQUVBLFNBQVM7QUFDVCxFQUFFLHFCQUFxQjtBQUN2QixLQUFLLDBCQUEwQixFQUFFLGNBQWMsRUFBRSx1QkFBdUIsQ0FBQztBQUN6RSxLQUFLLFdBQVcsRUFBRSxRQUFRLEVBQUUsdUJBQXVCLEVBQUUsaUNBQWlDLEVBQUUsdUJBQXVCLEVBQUUsZUFBZTtBQUNoSSxTQUFTLG1CQUFtQjtBQUM1QixJQUFJLGNBQWMsRUFBRSxhQUFhO0FBQ2pDLE1BQU0scUJBQXFCLEVBQUUsYUFBYSxFQUFFLGVBQWU7O0FBRTNEO0VBQ0UsOEJB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O0FBQ3hDO0FBQ0EsWUFBWSxrQ0FBa0MsRUFBRTs7QUFFaEQ7RUFDRSxhQUFhO0VBQ2IsZUFBZTtFQUNmLGFBQWE7RUFDYixxQkFBcUI7RUFDckIsOEJBQThCO0FBQ2hDOztBQUVBLFlBQVksZ0JBQWdCLEVBQUU7QUFDOUIsV0FBVyxvQkFBb0IsRUFBRTtBQUNqQyxjQUFjLGtCQUFrQixFQUFFOztBQUVsQyxtR0FBbUc7QUFDbkc7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLG1DQUFtQztFQUNuQyxXQUFXO0FBQ2I7QUFDQSw0QkFBNEIsa0JBQWtCLEVBQUU7QUFDaEQ7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxTQUFTO0VBQ1QsV0FBVyxFQUFFLFlBQVksRUFBRSxrQkFBa0I7RUFDN0Msd0JBQXdCO0VBQ3hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHdDQUF3QztBQUMxQztBQUNBO0VBQ0Usd0NBQXdDO0FBQzFDO0FBQ0E7RUFDRSw0Q0FBNEM7QUFDOUNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogTW9kZXJuaXplZCBzdHlsZXNoZWV0IGZvciBwb3J0Zm9saW9cXHJcXG4gICAtIFZhcmlhYmxlczogcGFsZXR0ZSwgdHlwb2dyYXBoeSBzY2FsZVxcclxcbiAgIC0gQ2xlYW4gbGF5b3V0IGZvciBoZWFkZXIsIGhlcm8gKDcwLzMwKSwgcm9sZXMgdGFicywgY2FyZHNcXHJcXG4gICAtIFNtb290aCBtaWNyb2ludGVyYWN0aW9ucyBhbmQgYWNjZXNzaWJsZSBmb2N1c1xcclxcbiovXFxyXFxuOnJvb3R7XFxyXFxuICAvKiBQYWxldGEgZGUgQ29sb3JlcyAqL1xcclxcbiAgLS1jb2xvci1wcmltYXJ5OiAjMTExMTExO1xcclxcbiAgLS1jb2xvci1zZWNvbmRhcnk6ICM2QzYzRkY7XFxyXFxuICAtLWNvbG9yLWFjY2VudC1hbHQ6ICNGRjc4NDk7XFxyXFxuICAtLWNvbG9yLW5ldXRyYWwtbGlnaHQ6ICNFQUVBRUE7XFxyXFxuICAtLWNvbG9yLW5ldXRyYWwtZGFyazogI0JGQkZCRjtcXHJcXG4gIC0tY29sb3ItYmc6ICNmYWZhZmE7XFxyXFxuICAtLWNvbG9yLXRleHQ6ICMxMTExMTE7XFxyXFxuXFxyXFxuICAvKiBUaXBvZ3JhZsOtYSAqL1xcclxcbiAgLS1mZi1oZWFkaW5nOiBcXFwiU3BhY2UgR3JvdGVza1xcXCIsIFxcXCJTYXRvc2hpXFxcIiwgc3lzdGVtLXVpLCBzYW5zLXNlcmlmO1xcclxcbiAgLS1mZi1ib2R5OiBcXFwiTWFucm9wZVxcXCIsIFxcXCJJbnRlclxcXCIsIHN5c3RlbS11aSwgc2Fucy1zZXJpZjtcXHJcXG5cXHJcXG4gIC8qIEVzdGlsb3MgeSBlc3BhY2lhZG8gKi9cXHJcXG4gIC0tbWF4dzogMTEwMHB4O1xcclxcbiAgLS1yYWRpdXM6IDEycHg7XFxyXFxuICAtLXNoYWRvdy1zb2Z0OiAwIDRweCAyMHB4IHJnYmEoMCwwLDAsMC4wNSk7XFxyXFxuICAtLXRyYW5zaXRpb246IDMyMG1zIGN1YmljLWJlemllciguMiwuOSwuMywxKTtcXHJcXG4gIC8qIHR5cG9ncmFwaGljIHNjYWxlICovXFxyXFxuICAtLXN0ZXAtLTE6IDEycHg7XFxyXFxuICAtLXN0ZXAtMDogMTRweDtcXHJcXG4gIC0tc3RlcC0xOiAxNnB4O1xcclxcbiAgLS1zdGVwLTI6IDIwcHg7XFxyXFxuICAtLXN0ZXAtMzogMjZweDtcXHJcXG4gIC0tc3RlcC00OiAzNHB4O1xcclxcbiAgLS1sZWFkOiAxOHB4O1xcclxcbn1cXHJcXG5cXHJcXG4vKiBCYXNlICovXFxyXFxuKntib3gtc2l6aW5nOmJvcmRlci1ib3h9XFxyXFxuaHRtbHtmb250LWZhbWlseTp2YXIoLS1mZi1ib2R5KTsgZm9udC1zaXplOjE2cHg7IHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO31cXHJcXG5ib2R5e2hlaWdodDoxMDAlOyBtYXJnaW46MDsgY29sb3I6dmFyKC0tY29sb3ItdGV4dCk7IGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLWJnKTsgZm9udC1zaXplOnZhcigtLXN0ZXAtMSk7IGxpbmUtaGVpZ2h0OjEuNn1cXHJcXG5hLGJ1dHRvbntmb250LWZhbWlseTppbmhlcml0fVxcclxcbmltZ3ttYXgtd2lkdGg6MTAwJTsgZGlzcGxheTpibG9ja31cXHJcXG4ud3JhcHttYXgtd2lkdGg6dmFyKC0tbWF4dyk7IG1hcmdpbjowIGF1dG87IHBhZGRpbmc6IDAgMnJlbX1cXHJcXG5cXHJcXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcXHJcXG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mZi1oZWFkaW5nKTtcXHJcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxyXFxuICBsZXR0ZXItc3BhY2luZzogLTAuMDJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLyogSGVhZGVyICovXFxyXFxuLnNpdGUtaGVhZGVye3Bvc2l0aW9uOnN0aWNreTsgdG9wOjFyZW07IGJhY2tkcm9wLWZpbHRlcjogYmx1cigxMHB4KTsgYmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LDAuOCk7IGJvcmRlci1yYWRpdXM6dmFyKC0tcmFkaXVzKTsgYm9yZGVyOjFweCBzb2xpZCB2YXIoLS1jb2xvci1uZXV0cmFsLWxpZ2h0KTsgcGFkZGluZzoxcmVtIDEuNXJlbTsgZGlzcGxheTpmbGV4OyBhbGlnbi1pdGVtczpjZW50ZXI7IGp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOyB6LWluZGV4OjYwOyB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLW91dDsgd2lkdGg6IGNhbGMoMTAwJSAtIDJyZW0pOyBtYXgtd2lkdGg6IHZhcigtLW1heHcpOyBtYXJnaW46IDFyZW0gYXV0bzt9XFxyXFxuLnNpdGUtaGVhZGVyOm5vdCgudmlzaWJsZSkgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEyMCUpOyB9XFxyXFxuLmJyYW5ke2Rpc3BsYXk6ZmxleDsgZ2FwOjE0cHg7IGFsaWduLWl0ZW1zOmNlbnRlcn1cXHJcXG4ubG9nby1tYXJre3dpZHRoOjQ4cHg7IGhlaWdodDo0OHB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQ6dmFyKC0tY29sb3Itc2Vjb25kYXJ5KTsgZGlzcGxheTpmbGV4OyBhbGlnbi1pdGVtczpjZW50ZXI7IGp1c3RpZnktY29udGVudDpjZW50ZXI7IGNvbG9yOndoaXRlOyBmb250LXdlaWdodDo3MDA7IGZvbnQtc2l6ZToxOHB4OyBmb250LWZhbWlseTogdmFyKC0tZmYtaGVhZGluZyk7fVxcclxcbi5icmFuZCBoMXtmb250LXNpemU6MTVweDsgbWFyZ2luOjB9XFxyXFxuLmJyYW5kIHB7bWFyZ2luOjA7IGZvbnQtc2l6ZToxM3B4OyBjb2xvcjp2YXIoLS1tdXRlZCl9XFxyXFxubmF2LnByaW1hcnl7ZGlzcGxheTpmbGV4OyBnYXA6MTJweDsgYWxpZ24taXRlbXM6Y2VudGVyfVxcclxcbi5uYXYucHJpbWFyeXthbGlnbi1pdGVtczpjZW50ZXJ9XFxyXFxuLm5hdi5wcmltYXJ5IGF7Zm9udC1zaXplOjEzcHg7IHBhZGRpbmc6NnB4IDhweDsgYm9yZGVyLXJhZGl1czo4cHg7IHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsgbGV0dGVyLXNwYWNpbmc6MXB4OyBmb250LXdlaWdodDo2MDB9XFxyXFxuLm5hdi5wcmltYXJ5IGE6OmFmdGVye2NvbnRlbnQ6Jyc7IGRpc3BsYXk6YmxvY2s7IGhlaWdodDoycHg7IHdpZHRoOjA7IGJhY2tncm91bmQ6dmFyKC0tYWNjZW50KTsgdHJhbnNpdGlvbjp3aWR0aCAyNjBtcyB2YXIoLS10cmFuc2l0aW9uKTsgbWFyZ2luLXRvcDo2cHg7IGJvcmRlci1yYWRpdXM6MnB4fVxcclxcbi5uYXYucHJpbWFyeSBhOmhvdmVyOjphZnRlcnt3aWR0aDoxMDAlfVxcclxcbi5uYXYucHJpbWFyeSBhOmhvdmVye2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7IGNvbG9yOiB2YXIoLS1jb2xvci1zZWNvbmRhcnkpO31cXHJcXG4uY3Rhe2JhY2tncm91bmQ6dmFyKC0tY29sb3Itc2Vjb25kYXJ5KTsgY29sb3I6d2hpdGU7IHBhZGRpbmc6OXB4IDE0cHg7IGJvcmRlci1yYWRpdXM6MTBweDsgZm9udC13ZWlnaHQ6NzAwOyB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTt9XFxyXFxuLmN0YTpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLWFjY2VudC1hbHQpOyB9XFxyXFxuXFxyXFxuLyogSGVybyAvIFNsaWRlciAqL1xcclxcbi5oZXJve2Rpc3BsYXk6Z3JpZDsgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjcwJSAzMCU7IGdhcDoyMHB4OyBtYXJnaW4tdG9wOjIwcHg7IGFsaWduLWl0ZW1zOnN0YXJ0fVxcclxcbi5oZXJvLWNhcmR7YmFja2dyb3VuZDp0cmFuc3BhcmVudDsgcGFkZGluZzoyNnB4OyBib3JkZXItcmFkaXVzOnZhcigtLXJhZGl1cyk7IH1cXHJcXG4uaGVyby1jYXJke3BhZGRpbmc6NDBweCA0MnB4fVxcclxcbi5oZXJvLXRpdGxle2ZvbnQtc2l6ZTo0MnB4OyBtYXJnaW46MCAwIDEycHggMDsgZm9udC13ZWlnaHQ6ODAwOyBsZXR0ZXItc3BhY2luZzotMC4wMmVtfVxcclxcbi5sZWFke2ZvbnQtc2l6ZToxOHB4OyBjb2xvcjp2YXIoLS1tdXRlZCk7IG1hcmdpbjowIDAgMThweCAwOyBtYXgtd2lkdGg6NjZjaH1cXHJcXG4uaGVybyAuY2hpcHN7bWFyZ2luLXRvcDoxOHB4fVxcclxcbi5jaGlwc3tkaXNwbGF5OmZsZXg7IGdhcDo4cHg7IGZsZXgtd3JhcDp3cmFwOyBtYXJnaW4tdG9wOjhweH1cXHJcXG4uY2hpcHtiYWNrZ3JvdW5kOnZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyBib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50OyBwYWRkaW5nOjZweCAxMnB4OyBib3JkZXItcmFkaXVzOjk5OXB4OyBmb250LXNpemU6MTNweDsgY29sb3I6dmFyKC0tY29sb3ItdGV4dCl9XFxyXFxuXFxyXFxuLnNsaWRlci13cmFwe2JhY2tncm91bmQ6dmFyKC0tY2FyZCk7IHBhZGRpbmc6MjJweDsgYm9yZGVyLXJhZGl1czp2YXIoLS1yYWRpdXMpOyBib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTEsMzcsNjQsMC4wNCk7IGJveC1zaGFkb3c6dmFyKC0tY2FyZC1lbGV2KX1cXHJcXG4uc2xpZGVye2Rpc3BsYXk6ZmxleDsgZ2FwOjE0cHg7IGFsaWduLWl0ZW1zOmNlbnRlcjsgb3ZlcmZsb3c6aGlkZGVuOyBwb3NpdGlvbjpyZWxhdGl2ZX1cXHJcXG4uc2xpZGVze2Rpc3BsYXk6ZmxleDsgdHJhbnNpdGlvbjp0cmFuc2Zvcm0gNTIwbXMgY3ViaWMtYmV6aWVyKC4yLC45LC4zLDEpfVxcclxcbi5jYXJkLXNsaWRle21pbi13aWR0aDozMjBweDsgbWF4LXdpZHRoOjQ2MHB4OyBiYWNrZ3JvdW5kOnZhcigtLWNhcmQpOyBib3JkZXItcmFkaXVzOjEycHg7IHBhZGRpbmc6MThweDsgYm94LXNoYWRvdzp2YXIoLS1jYXJkLWVsZXYpOyBib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTEsMzcsNjQsMC4wMyk7IGRpc3BsYXk6ZmxleDsgZmxleC1kaXJlY3Rpb246Y29sdW1uOyBnYXA6MTBweDsgdHJhbnNpdGlvbjp0cmFuc2Zvcm0gdmFyKC0tdHJhbnNpdGlvbiksIGJveC1zaGFkb3cgdmFyKC0tdHJhbnNpdGlvbil9XFxyXFxuLmNhcmQtc2xpZGU6aG92ZXJ7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTZweCk7IGJveC1zaGFkb3c6MCAxOHB4IDQwcHggcmdiYSgxMSwzNyw2NCwwLjA5KX1cXHJcXG4uY2FyZC1zbGlkZXt3aWxsLWNoYW5nZTp0cmFuc2Zvcm19XFxyXFxuLmNhcmQtc2xpZGUgaDN7bWFyZ2luOjA7Zm9udC1zaXplOjE2cHh9XFxyXFxuLmNhcmQtc2xpZGUgcHttYXJnaW46MDtjb2xvcjp2YXIoLS1tdXRlZCk7Zm9udC1zaXplOjE0cHh9XFxyXFxuLmNhcmQtYWN0aW9uc3ttYXJnaW4tdG9wOmF1dG87IGRpc3BsYXk6ZmxleDsgZ2FwOjhweH1cXHJcXG4uYnRue3BhZGRpbmc6OXB4IDE0cHg7Ym9yZGVyLXJhZGl1czoxMHB4O2JvcmRlcjowO2ZvbnQtd2VpZ2h0OjcwMDtjdXJzb3I6cG9pbnRlcjsgdHJhbnNpdGlvbjphbGwgdmFyKC0tdHJhbnNpdGlvbil9XFxyXFxuLmJ0bi1wcmltYXJ5e2JhY2tncm91bmQ6dmFyKC0tYWNjZW50KTsgY29sb3I6d2hpdGU7IGJveC1zaGFkb3c6MCA4cHggMjBweCByZ2JhKDExLDEwNywyNTUsMC4xMil9XFxyXFxuLmJ0bi1vdXRsaW5le2JhY2tncm91bmQ6d2hpdGU7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDExLDM3LDY0LDAuMDQpO2NvbG9yOnZhcigtLWFjY2VudC0yKX1cXHJcXG5cXHJcXG4ubmF2LWNvbnRyb2xze2Rpc3BsYXk6ZmxleDsgYWxpZ24taXRlbXM6Y2VudGVyOyBnYXA6OHB4fVxcclxcbi5uYXYtY29udHJvbHMgYnV0dG9ue2JhY2tncm91bmQ6d2hpdGU7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDExLDM3LDY0LDAuMDQpO3BhZGRpbmc6OHB4O2JvcmRlci1yYWRpdXM6MTBweDtjdXJzb3I6cG9pbnRlcjsgdHJhbnNpdGlvbjphbGwgdmFyKC0tdHJhbnNpdGlvbil9XFxyXFxuLm5hdi1jb250cm9scyBidXR0b246aG92ZXJ7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTJweCl9XFxyXFxuXFxyXFxuLyogRG90cyAqL1xcclxcbi5kb3Rze2Rpc3BsYXk6ZmxleDsgZ2FwOjhweDsgbWFyZ2luLWxlZnQ6MTJweH1cXHJcXG4uZG90e3dpZHRoOjEwcHg7aGVpZ2h0OjEwcHg7Ym9yZGVyLXJhZGl1czo1MCU7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoOTBkZWcsI2U5ZjJmZiwjZjBmOWY4KX1cXHJcXG4uZG90LmFjdGl2ZXtiYWNrZ3JvdW5kOnZhcigtLWFjY2VudCl9XFxyXFxuXFxyXFxuLyogQ29udGVudCAmIFBhbmVscyAqL1xcclxcbiNjb250ZW50LWFyZWF7bWFyZ2luLXRvcDoyMHB4OyBkaXNwbGF5OmdyaWQ7IGdyaWQtdGVtcGxhdGUtY29sdW1uczoxZnI7IGdhcDoxNHB4fVxcclxcbi5wYW5lbHtiYWNrZ3JvdW5kOndoaXRlOyBwYWRkaW5nOjJyZW07IGJvcmRlci1yYWRpdXM6dmFyKC0tcmFkaXVzKTsgYm94LXNoYWRvdzogdmFyKC0tc2hhZG93LXNvZnQpOyBkaXNwbGF5Om5vbmV9XFxyXFxuLnBhbmVsLmFjdGl2ZXtkaXNwbGF5OmJsb2NrfVxcclxcbi5jYXJkcy1ncmlke2Rpc3BsYXk6Z3JpZDsgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdCgyLDFmcik7IGdhcDoxNHB4fVxcclxcbi5wcm9qZWN0LWNhcmR7YmFja2dyb3VuZDp3aGl0ZTtib3JkZXItcmFkaXVzOjEwcHg7cGFkZGluZzoxMnB4O2JvcmRlcjoxcHggc29saWQgI2VlZjRmYn1cXHJcXG5cXHJcXG4vKiBTaWRlYmFyICovXFxyXFxuLnNpZGV7ZGlzcGxheTpmbGV4OyBmbGV4LWRpcmVjdGlvbjpjb2x1bW47IGdhcDoxNHB4fVxcclxcbi5jYXJke2JhY2tncm91bmQ6d2hpdGU7IHBhZGRpbmc6MnJlbTsgYm9yZGVyLXJhZGl1czp2YXIoLS1yYWRpdXMpOyBib3gtc2hhZG93OiB2YXIoLS1zaGFkb3ctc29mdCk7fVxcclxcblxcclxcbi8qIFJvbGVzIC8gVGFicyBzZWN0aW9uICovXFxyXFxuLnJvbGVzLXRhYnN7bWFyZ2luLXRvcDoxNHB4fVxcclxcbi5yb2xlcy1uYXZ7ZGlzcGxheTpmbGV4OyBnYXA6OHB4OyBmbGV4LXdyYXA6d3JhcDsgbWFyZ2luLWJvdHRvbToxNHB4fVxcclxcbi5yb2xlLXRhYntiYWNrZ3JvdW5kOnRyYW5zcGFyZW50OyBib3JkZXI6MXB4IHNvbGlkIHZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyBwYWRkaW5nOjhweCAxMnB4OyBib3JkZXItcmFkaXVzOjEwcHg7IGN1cnNvcjpwb2ludGVyOyBmb250LXdlaWdodDo3MDA7IGRpc3BsYXk6aW5saW5lLWZsZXg7IGFsaWduLWl0ZW1zOmNlbnRlcjsgZ2FwOjhweDsgdHJhbnNpdGlvbjphbGwgdmFyKC0tdHJhbnNpdGlvbil9XFxyXFxuLnJvbGUtdGFiIC5pY29ue2ZvbnQtc2l6ZToxOHB4OyBvcGFjaXR5OjAuOTV9XFxyXFxuLnJvbGUtdGFiIC5sYWJlbHtmb250LXdlaWdodDo3MDB9XFxyXFxuLnJvbGUtdGFiOmhvdmVye3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0zcHgpfVxcclxcbi5yb2xlLXRhYi5hY3RpdmV7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoOTBkZWcsdmFyKC0tYWNjZW50KSx2YXIoLS1hY2NlbnQtMykpOyBjb2xvcjp3aGl0ZTsgYm94LXNoYWRvdzowIDEycHggMzBweCByZ2JhKDExLDM3LDY0LDAuMDgpfVxcclxcbi5yb2xlLXRhYjpmb2N1c3tvdXRsaW5lOjNweCBzb2xpZCByZ2JhKDExLDEwNywyNTUsMC4xMik7IG91dGxpbmUtb2Zmc2V0OjNweH1cXHJcXG5cXHJcXG4vKiBTVkcgaWNvbiBjb2xvciAmIHNpemUgKi9cXHJcXG4ucm9sZS10YWIgc3ZnLmljb257d2lkdGg6MThweDsgaGVpZ2h0OjE4cHg7IGNvbG9yOnZhcigtLW11dGVkKTsgdHJhbnNpdGlvbjpjb2xvciB2YXIoLS10cmFuc2l0aW9uKSwgdHJhbnNmb3JtIHZhcigtLXRyYW5zaXRpb24pfVxcclxcbi5yb2xlLXRhYjpob3ZlciBzdmcuaWNvbnt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtMnB4KX1cXHJcXG4ucm9sZS10YWIuYWN0aXZlIHN2Zy5pY29ue2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC45NSl9XFxyXFxuXFxyXFxuLyogaGlkZSBsYWJlbHMgb24gdmVyeSBzbWFsbCBzY3JlZW5zIHRvIHNhdmUgc3BhY2UgKi9cXHJcXG5AbWVkaWEgKG1heC13aWR0aDo1MjBweCl7XFxyXFxuICAucm9sZS10YWIgLmxhYmVse2Rpc3BsYXk6bm9uZX1cXHJcXG59XFxyXFxuXFxyXFxuLnJvbGVzLXBhbmVsc3twb3NpdGlvbjpyZWxhdGl2ZTsgbWluLWhlaWdodDoyMDBweDsgYmFja2dyb3VuZDogd2hpdGU7IGJvcmRlci1yYWRpdXM6IHZhcigtLXJhZGl1cyk7IHBhZGRpbmc6IDJyZW07IGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1zb2Z0KTt9XFxyXFxuLnJvbGUtcGFuZWx7cG9zaXRpb246YWJzb2x1dGU7IGluc2V0OjA7IG9wYWNpdHk6MDsgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoOHB4KTsgdHJhbnNpdGlvbjphbGwgMzIwbXMgY3ViaWMtYmV6aWVyKC4yLC45LC4zLDEpOyBwb2ludGVyLWV2ZW50czpub25lfVxcclxcbi5yb2xlLXBhbmVsLmFjdGl2ZXtvcGFjaXR5OjE7IHRyYW5zZm9ybTpub25lOyBwb2ludGVyLWV2ZW50czphdXRvOyBwb3NpdGlvbjpyZWxhdGl2ZX1cXHJcXG4ucm9sZS1jb250ZW50e2Rpc3BsYXk6Z3JpZDsgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmcjsgZ2FwOjE2cHh9XFxyXFxuLnJvbGUtaGVyb3tkaXNwbGF5OmZsZXg7IGZsZXgtZGlyZWN0aW9uOmNvbHVtbjsgZ2FwOjhweH1cXHJcXG4ucHJvamVjdHMtbGlzdHtkaXNwbGF5OmdyaWQ7IGdyaWQtdGVtcGxhdGUtY29sdW1uczpyZXBlYXQoMywxZnIpOyBnYXA6MTJweH1cXHJcXG4ucHJvamVjdC1jYXJkLXNtYWxse2JhY2tncm91bmQ6dmFyKC0tY2FyZCk7IGJvcmRlci1yYWRpdXM6MTBweDsgcGFkZGluZzoxMHB4OyBib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTEsMzcsNjQsMC4wNCl9XFxyXFxuLnByb2plY3QtY2FyZC1zbWFsbHtwb3NpdGlvbjpyZWxhdGl2ZTsgb3ZlcmZsb3c6aGlkZGVufVxcclxcbi5wcm9qZWN0LWNhcmQtc21hbGwgaW1ne2hlaWdodDoxMjBweDsgb2JqZWN0LWZpdDpjb3ZlcjsgYm9yZGVyLXJhZGl1czo4cHg7IHRyYW5zaXRpb246dHJhbnNmb3JtIDQyMG1zIHZhcigtLXRyYW5zaXRpb24pfVxcclxcbi5wcm9qZWN0LWNhcmQtc21hbGw6OmFmdGVye2NvbnRlbnQ6Jyc7IHBvc2l0aW9uOmFic29sdXRlOyBpbnNldDowOyBiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsIHJnYmEoMTEsMzcsNjQsMC4wKSwgcmdiYSgxMSwzNyw2NCwwLjA4KSk7IHBvaW50ZXItZXZlbnRzOm5vbmU7IG9wYWNpdHk6MDsgdHJhbnNpdGlvbjpvcGFjaXR5IDMyMG1zIHZhcigtLXRyYW5zaXRpb24pfVxcclxcbi5wcm9qZWN0LWNhcmQtc21hbGw6aG92ZXIgaW1ne3RyYW5zZm9ybTpzY2FsZSgxLjA0KSB0cmFuc2xhdGVZKC00cHgpfVxcclxcbi5wcm9qZWN0LWNhcmQtc21hbGw6aG92ZXI6OmFmdGVye29wYWNpdHk6MX1cXHJcXG4ucHJvamVjdC1jYXJkLXNtYWxsIC5wcm9qZWN0LW1ldGF7cGFkZGluZzoxMHB4fVxcclxcblxcclxcbi8qIHRpbHQgaG92ZXIgLSBoYXJkd2FyZSBhY2NlbGVyYXRlZCAqL1xcclxcbi5wcm9qZWN0LWNhcmQtc21hbGwudGlsdHt0cmFuc2Zvcm0tc3R5bGU6cHJlc2VydmUtM2Q7IHRyYW5zaXRpb246dHJhbnNmb3JtIDI4MG1zIHZhcigtLXRyYW5zaXRpb24pfVxcclxcblxcclxcbi8qIGZlYXR1cmVkIGltYWdlIHN1YnRsZSBwYXJhbGxheCAqL1xcclxcbi5mZWF0dXJlZC1pbWctd3JhcHtvdmVyZmxvdzpoaWRkZW59XFxyXFxuLmZlYXR1cmVkLWltZ3t0cmFuc2l0aW9uOnRyYW5zZm9ybSA1MjBtcyB2YXIoLS10cmFuc2l0aW9uKX1cXHJcXG4uZmVhdHVyZWQ6aG92ZXIgLmZlYXR1cmVkLWltZ3t0cmFuc2Zvcm06c2NhbGUoMS4wMykgdHJhbnNsYXRlWSgtNnB4KX1cXHJcXG4uc2tpbGxzLWxpc3R7ZGlzcGxheTpmbGV4OyBnYXA6OHB4OyBmbGV4LXdyYXA6d3JhcH1cXHJcXG4uc2tpbGwtcGlsbHtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsI2ZmZiwjZmJmZGZmKTsgYm9yZGVyOjFweCBzb2xpZCByZ2JhKDExLDM3LDY0LDAuMDQpOyBwYWRkaW5nOjZweCAxMHB4OyBib3JkZXItcmFkaXVzOjk5OXB4OyBmb250LXNpemU6MTNweH1cXHJcXG4vKlxcclxcbiBIaWdoLWNvbnRyYXN0IHNraWxsIGJhZGdlcyBcXHJcXG4uc2tpbGwtcGlsbHsgYmFja2dyb3VuZDogdmFyKC0tY29sb3ItcHJpbWFyeSk7IGNvbG9yOiB3aGl0ZTsgYm9yZGVyOjA7IHBhZGRpbmc6NnB4IDEwcHg7IGJvcmRlci1yYWRpdXM6OTk5cHg7IGZvbnQtc2l6ZToxM3B4OyBmb250LXdlaWdodDo2MDA7IGJveC1zaGFkb3c6IDAgNnB4IDE4cHggcmdiYSgxMSwzNyw2NCwwLjA4KTt9IFxcclxcbi5za2lsbC1waWxsLmFsdHsgYmFja2dyb3VuZDogdmFyKC0tY29sb3Itc2Vjb25kYXJ5KTsgY29sb3I6IHdoaXRlOyB9XFxyXFxuKi9cXHJcXG4vKiBNYWtlIGhlcm8gY2hpcHMgbW9yZSBsZWdpYmxlIFxcclxcbi5jaGlweyBiYWNrZ3JvdW5kOiByZ2JhKDExLDM3LDY0LDAuMDgpOyBjb2xvcjogdmFyKC0tY29sb3ItdGV4dCk7IGJvcmRlcjowOyBmb250LXdlaWdodDo2MDAgfVxcclxcbiovXFxyXFxuXFxyXFxuLyogRmVhdHVyZWQgcHJvamVjdCBsYXlvdXQgKi9cXHJcXG4uZmVhdHVyZWQtcHJvamVjdHN7ZGlzcGxheTpncmlkOyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6MmZyIDFmcjsgZ2FwOjE2cHg7IGFsaWduLWl0ZW1zOnN0YXJ0fVxcclxcbi5mZWF0dXJlZHtkaXNwbGF5OmZsZXg7IGdhcDoxNnB4OyBiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsI2ZmZiwjZmJmZGZmKTsgYm9yZGVyLXJhZGl1czoxMnB4OyBvdmVyZmxvdzpoaWRkZW47IGJveC1zaGFkb3c6dmFyKC0tY2FyZC1lbGV2KTsgYm9yZGVyOjFweCBzb2xpZCByZ2JhKDExLDM3LDY0LDAuMDQpfVxcclxcbi5mZWF0dXJlZC1pbWctd3JhcHt3aWR0aDo1NiU7IGRpc3BsYXk6YmxvY2s7IGJhY2tncm91bmQ6I2VlZjRmYn1cXHJcXG4uZmVhdHVyZWQtaW1ne3dpZHRoOjEwMCU7IGhlaWdodDoxMDAlOyBvYmplY3QtZml0OmNvdmVyOyBkaXNwbGF5OmJsb2NrOyBtaW4taGVpZ2h0OjIyMHB4fVxcclxcbi5mZWF0dXJlZC1pbmZve3BhZGRpbmc6MTZweDsgZGlzcGxheTpmbGV4OyBmbGV4LWRpcmVjdGlvbjpjb2x1bW47IGdhcDo4cHh9XFxyXFxuLmZlYXR1cmVkLWluZm8gaDR7bWFyZ2luOjB9XFxyXFxuLmFzaWRlLXNtYWxse2Rpc3BsYXk6ZmxleDsgZmxleC1kaXJlY3Rpb246Y29sdW1uOyBnYXA6MTJweH1cXHJcXG4ucHJvamVjdC1jYXJkLXNtYWxsIGltZ3t3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwcHg7IG9iamVjdC1maXQ6Y292ZXI7IGJvcmRlci1yYWRpdXM6OHB4fVxcclxcbi50ZWNoLWJhZGdlc3tkaXNwbGF5OmZsZXg7IGdhcDo4cHg7IGZsZXgtd3JhcDp3cmFwOyBtYXJnaW4tdG9wOjhweH1cXHJcXG5cXHJcXG4vKiBwYW5lbCBzbGlkZSBhbmltYXRpb25zIChsZWZ0IC8gcmlnaHQpICovXFxyXFxuLmFuaW0tZW50ZXItcmlnaHR7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMThweCk7IG9wYWNpdHk6MH1cXHJcXG4uYW5pbS1lbnRlci1sZWZ0e3RyYW5zZm9ybTp0cmFuc2xhdGVYKC0xOHB4KTsgb3BhY2l0eTowfVxcclxcbi5hbmltLWVudGVyLWFjdGl2ZXt0cmFuc2Zvcm06bm9uZTsgb3BhY2l0eToxOyB0cmFuc2l0aW9uOnRyYW5zZm9ybSA0MjBtcyB2YXIoLS10cmFuc2l0aW9uKSwgb3BhY2l0eSA0MjBtcyB2YXIoLS10cmFuc2l0aW9uKX1cXHJcXG4uYW5pbS1leGl0LXJpZ2h0e3RyYW5zZm9ybTpub25lOyBvcGFjaXR5OjF9XFxyXFxuLmFuaW0tZXhpdC1sZWZ0e3RyYW5zZm9ybTpub25lOyBvcGFjaXR5OjF9XFxyXFxuLmFuaW0tZXhpdC1hY3RpdmUuYW5pbS1leGl0LXJpZ2h0e3RyYW5zZm9ybTp0cmFuc2xhdGVYKC0xOHB4KTsgb3BhY2l0eTowOyB0cmFuc2l0aW9uOnRyYW5zZm9ybSA0MjBtcyB2YXIoLS10cmFuc2l0aW9uKSwgb3BhY2l0eSA0MjBtcyB2YXIoLS10cmFuc2l0aW9uKX1cXHJcXG4uYW5pbS1leGl0LWFjdGl2ZS5hbmltLWV4aXQtbGVmdHt0cmFuc2Zvcm06dHJhbnNsYXRlWCgxOHB4KTsgb3BhY2l0eTowOyB0cmFuc2l0aW9uOnRyYW5zZm9ybSA0MjBtcyB2YXIoLS10cmFuc2l0aW9uKSwgb3BhY2l0eSA0MjBtcyB2YXIoLS10cmFuc2l0aW9uKX1cXHJcXG5cXHJcXG4vKiBsaWdodCAvIGRhcmsgcGFuZWwgdmFyaWFudHMgKi9cXHJcXG4ucm9sZS1wYW5lbC5saWdodHtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsI2ZmZmZmZiwjZmJmZGZmKX1cXHJcXG4ucm9sZS1wYW5lbC5kYXJre2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywjMGIxMjIwLCMwNzEwMjEpOyBjb2xvcjojZTZlZWY4fVxcclxcbi5yb2xlLXBhbmVsLmRhcmsgLm11dGVke2NvbG9yOnJnYmEoMjMwLDIzOCwyNDgsMC43NSl9XFxyXFxuXFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6OTgwcHgpe1xcclxcbiAgLmZlYXR1cmVkLXByb2plY3Rze2dyaWQtdGVtcGxhdGUtY29sdW1uczoxZnI7fVxcclxcbiAgLmZlYXR1cmVkLWltZ3ttaW4taGVpZ2h0OjE2MHB4OyB3aWR0aDoxMDAlfVxcclxcbiAgLnByb2plY3RzLWxpc3R7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmcn1cXHJcXG59XFxyXFxuXFxyXFxuLyogQWNjb3JkaW9ucyAoY2VydGlmaWNhY2lvbmVzKSAqL1xcclxcbi5hY2NvcmRpb257Ym9yZGVyLXJhZGl1czoxMHB4OyBvdmVyZmxvdzpoaWRkZW59XFxyXFxuLmFjYy1pdGVte2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNlZWY0ZmJ9XFxyXFxuLmFjYy1pdGVtIGJ1dHRvbntiYWNrZ3JvdW5kOndoaXRlOyB3aWR0aDoxMDAlOyBwYWRkaW5nOjEycHg7IHRleHQtYWxpZ246bGVmdDsgYm9yZGVyOjA7IGZvbnQtd2VpZ2h0OjYwMH1cXHJcXG4uYWNjLWl0ZW0gLnBhbmVse2Rpc3BsYXk6bm9uZTsgcGFkZGluZzoxMnB4OyBjb2xvcjp2YXIoLS1tdXRlZCk7IGZvbnQtc2l6ZToxM3B4fVxcclxcblxcclxcbi8qIENvbnRhY3QgZm9ybSAqL1xcclxcbmZvcm0uY29udGFjdHtkaXNwbGF5OmdyaWQ7IGdhcDo4cHh9XFxyXFxuaW5wdXQsIHRleHRhcmVhe3dpZHRoOjEwMCU7IHBhZGRpbmc6MTBweDsgYm9yZGVyLXJhZGl1czo4cHg7IGJvcmRlcjoxcHggc29saWQgdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7IGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLWJnKTsgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3MgZWFzZTt9XFxyXFxuaW5wdXQ6Zm9jdXMsIHRleHRhcmVhOmZvY3VzIHsgYm9yZGVyLWNvbG9yOiB2YXIoLS1jb2xvci1zZWNvbmRhcnkpOyBvdXRsaW5lOiBub25lOyB9XFxyXFxuYnV0dG9uLnNlbmR7YmFja2dyb3VuZDp2YXIoLS1jb2xvci1zZWNvbmRhcnkpOyBjb2xvcjp3aGl0ZTsgcGFkZGluZzoxMnB4OyBib3JkZXItcmFkaXVzOjhweDsgYm9yZGVyOjA7IGZvbnQtd2VpZ2h0OiA3MDA7IHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO31cXHJcXG5idXR0b24uc2VuZDpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLWFjY2VudC1hbHQpOyB9XFxyXFxuXFxyXFxuLyogRm9vdGVyICovXFxyXFxuZm9vdGVye21hcmdpbi10b3A6MzJweDsgcGFkZGluZzoxOHB4IDA7IHRleHQtYWxpZ246Y2VudGVyOyBjb2xvcjp2YXIoLS1tdXRlZCk7IGZvbnQtc2l6ZToxM3B4fVxcclxcblxcclxcbi8qIFJlc3BvbnNpdmUgdHdlYWtzICovXFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6OTgwcHgpe1xcclxcbiAgLnNsaWRlc3tnYXA6MTJweH1cXHJcXG4gIC5jYXJkLXNsaWRle21pbi13aWR0aDoyODBweH1cXHJcXG4gIC5jYXJkcy1ncmlke2dyaWQtdGVtcGxhdGUtY29sdW1uczoxZnJ9XFxyXFxuICAvKiBTdGFjayBoZXJvIGNvbHVtbnMgb24gbmFycm93IHNjcmVlbnMgKi9cXHJcXG4gIC5oZXJve2dyaWQtdGVtcGxhdGUtY29sdW1uczoxZnJ9XFxyXFxuICBodG1se2ZvbnQtc2l6ZToxNXB4fVxcclxcbiAgLmhlcm8tdGl0bGV7Zm9udC1zaXplOjI4cHh9XFxyXFxuICAubGVhZHtmb250LXNpemU6MTVweH1cXHJcXG59XFxyXFxuXFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6OTIwcHgpe1xcclxcbiAgLmdyaWQtcHJvamVjdHN7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmcn1cXHJcXG4gIC53cmFwe3BhZGRpbmc6MTJweH1cXHJcXG4gIGhlYWRlci5zaXRlLWhlYWRlcntmbGV4LWRpcmVjdGlvbjpjb2x1bW47IGdhcDoxMnB4OyBhbGlnbi1pdGVtczpmbGV4LXN0YXJ0fVxcclxcbn1cXHJcXG5cXHJcXG4vKiBBbmltYXRpb25zICYgYWNjZXNzaWJpbGl0eSAqL1xcclxcbi5yZXZlYWx7b3BhY2l0eTowOyB0cmFuc2Zvcm06dHJhbnNsYXRlWSgxMHB4KTsgdHJhbnNpdGlvbjphbGwgNTIwbXMgY3ViaWMtYmV6aWVyKC4yLC45LC4zLDEpfVxcclxcbi5yZXZlYWwudmlzaWJsZXtvcGFjaXR5OjE7IHRyYW5zZm9ybTpub25lfVxcclxcbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXtcXHJcXG4gICosICo6OmJlZm9yZSwgKjo6YWZ0ZXJ7dHJhbnNpdGlvbjpub25lICFpbXBvcnRhbnQ7IGFuaW1hdGlvbjpub25lICFpbXBvcnRhbnR9XFxyXFxufVxcclxcbjpmb2N1c3tvdXRsaW5lOm5vbmV9XFxyXFxuOmZvY3VzLXZpc2libGV7b3V0bGluZTozcHggc29saWQgcmdiYSgxMSwxMDcsMjU1LDAuMTQpOyBvdXRsaW5lLW9mZnNldDozcHh9XFxyXFxuXFxyXFxuLyogRmxvYXRpbmcgc3RpY2tlciBiYWRnZSAqL1xcclxcbiNzdGlja2VyLWJhZGdle3Bvc2l0aW9uOmZpeGVkOyByaWdodDoxOHB4OyBib3R0b206MThweDsgd2lkdGg6NjRweDsgaGVpZ2h0OjY0cHg7IGJvcmRlci1yYWRpdXM6OTk5cHg7IHBhZGRpbmc6NnB4OyBib3JkZXI6MnB4IHNvbGlkIHJnYmEoMjU1LDI1NSwyNTUsMC45Mik7IGJhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywjZmZmLCNmZmYpOyBib3gtc2hhZG93OjAgOHB4IDI0cHggcmdiYSgxMiwxOCwzNiwwLjE4KTsgZGlzcGxheTppbmxpbmUtZ3JpZDsgcGxhY2UtaXRlbXM6Y2VudGVyOyB6LWluZGV4OjEyMDA7IGN1cnNvcjpwb2ludGVyOyB0cmFuc2l0aW9uOnRyYW5zZm9ybSAuMThzIGVhc2UsIGJveC1zaGFkb3cgLjE4cyBlYXNlfVxcclxcbiNzdGlja2VyLWJhZGdlIGltZ3t3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTsgYm9yZGVyLXJhZGl1czo5OTlweDsgZGlzcGxheTpibG9jazsgb2JqZWN0LWZpdDpjb3Zlcn1cXHJcXG4jc3RpY2tlci1iYWRnZSBzdmd7d2lkdGg6MTAwJTsgaGVpZ2h0OjEwMCU7IGJvcmRlci1yYWRpdXM6OTk5cHh9XFxyXFxuI3N0aWNrZXItYmFkZ2U6Zm9jdXMsICNzdGlja2VyLWJhZGdlOmZvY3VzLXZpc2libGV7b3V0bGluZTozcHggc29saWQgdmFyKC0tYWNjZW50KTsgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTNweCkgc2NhbGUoMS4wMil9XFxyXFxuI3N0aWNrZXItYmFkZ2U6aG92ZXJ7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTRweCk7IGJveC1zaGFkb3c6MCAxNHB4IDM4cHggcmdiYSgxMiwxOCwzNiwwLjIyKX1cXHJcXG5AbWVkaWEgKG1heC13aWR0aDo2NDBweCl7I3N0aWNrZXItYmFkZ2V7cmlnaHQ6MTJweDsgYm90dG9tOjEycHg7IHdpZHRoOjU2cHg7IGhlaWdodDo1NnB4fX1cXHJcXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSl7I3N0aWNrZXItYmFkZ2V7dHJhbnNpdGlvbjpub25lOyB0cmFuc2Zvcm06bm9uZX19XFxyXFxuLmhpZGRlbntkaXNwbGF5Om5vbmUgIWltcG9ydGFudH1cXHJcXG5cXHJcXG4vKiBEYXJrIHRoZW1lIG92ZXJyaWRlcyAqL1xcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXXtcXHJcXG4gIC0tY29sb3ItcHJpbWFyeTogI0ZGRkZGRjtcXHJcXG4gIC0tY29sb3Itc2Vjb25kYXJ5OiAjNkM2M0ZGO1xcclxcbiAgLS1jb2xvci1hY2NlbnQtYWx0OiAjRkY3ODQ5O1xcclxcbiAgLS1jb2xvci1uZXV0cmFsLWxpZ2h0OiAjMmEyYTJhO1xcclxcbiAgLS1jb2xvci1uZXV0cmFsLWRhcms6ICNhMGEwYTA7XFxyXFxuICAtLWNvbG9yLWJnOiAjMGYwZjBmO1xcclxcbiAgLS1jb2xvci10ZXh0OiAjRUFFQUVBO1xcclxcbn1cXHJcXG5cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gYm9keXsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzFhMWExYSwgIzBmMGYwZik7IGNvbG9yOnZhcigtLWNvbG9yLXRleHQpOyB9XFxyXFxuXFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC5zaXRlLWhlYWRlcnsgYmFja2dyb3VuZDogcmdiYSgyNiwyNiwyNiwwLjgpOyBib3JkZXI6MXB4IHNvbGlkIHZhcigtLWNvbG9yLW5ldXRyYWwtbGlnaHQpOyB9XFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC5jYXJkIHsgYmFja2dyb3VuZDogIzFhMWExYTsgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7IGJveC1zaGFkb3c6IG5vbmU7IH1cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLmhlcm8tY2FyZCB7IGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC5jaGlwIHsgYmFja2dyb3VuZDogdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7IGNvbG9yOiB2YXIoLS1jb2xvci10ZXh0KTsgfVxcclxcbjpyb290W2RhdGEtdCBoZW1lPVxcXCJkYXJrXFxcIl0gLnJvbGUtdGFiIHsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IGJvcmRlci1jb2xvcjogdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7IH1cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLnJvbGUtdGFiLmFjdGl2ZSB7IGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLXNlY29uZGFyeSk7IGJvcmRlci1jb2xvcjogdmFyKC0tY29sb3Itc2Vjb25kYXJ5KTsgfVxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAucm9sZXMtcGFuZWxzIHsgYmFja2dyb3VuZDogIzFhMWExYTsgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7IGJveC1zaGFkb3c6IG5vbmU7IH1cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gaW5wdXQsIDpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSB0ZXh0YXJlYSB7IGJhY2tncm91bmQ6ICMwZjBmMGY7IGJvcmRlci1jb2xvcjogdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7IGNvbG9yOiB2YXIoLS1jb2xvci10ZXh0KTsgfVxcclxcblxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAubW9kYWwtbWVkaWF7YmFja2dyb3VuZDojMDcxMDIxfVxcclxcblxcclxcbi8qIERhcmstbW9kZSBmaXhlcyBmb3Igc2xpZGVyIGFuZCBVSSBjaHJvbWUgdGhhdCB1c2VkIGhhcmQtY29kZWQgbGlnaHQgY29sb3JzICovXFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC5kb3R7IGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywjMTIzNDQ3LCMwYjI0MzMpOyB9XFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC5kb3QuYWN0aXZleyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsdmFyKC0tYWNjZW50KSwgdmFyKC0tYWNjZW50LTMpKTsgfVxcclxcblxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAubmF2LWNvbnRyb2xzIGJ1dHRvbnsgYmFja2dyb3VuZDogcmdiYSgyNTUsMjU1LDI1NSwwLjAyKTsgYm9yZGVyOjFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LDAuMDQpOyBjb2xvcjp2YXIoLS1hY2NlbnQtMik7IGJveC1zaGFkb3c6bm9uZSB9XFxyXFxuXFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC5jYXJkLXNsaWRlIGgzLFxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuY2FyZC1zbGlkZSBwLFxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAucHJvamVjdC1jYXJkLXNtYWxsIC5tdXRlZCxcXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLnRpbnl7IGNvbG9yOnZhcigtLW11dGVkKSB9XFxyXFxuXFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdIC5idG4tb3V0bGluZXsgYmFja2dyb3VuZDp0cmFuc3BhcmVudDsgYm9yZGVyOjFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LDAuMDQpOyBjb2xvcjp2YXIoLS1hY2NlbnQtMikgfVxcclxcblxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuYWNjLWl0ZW0gYnV0dG9ueyBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50OyBjb2xvcjp2YXIoLS1hY2NlbnQtMikgfVxcclxcblxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAucHJvamVjdC1jYXJkLXNtYWxsOjphZnRlcnsgYmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDAsMCwwLDAuMDgpLCByZ2JhKDAsMCwwLDAuMTgpKTsgfVxcclxcblxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAuZG90c3sgZmlsdGVyOmJyaWdodG5lc3MoMC45KTsgfVxcclxcblxcclxcblxcclxcblxcclxcbi8qIFRoZW1lIHRvZ2dsZSAqL1xcclxcbi50aGVtZS10b2dnbGV7bWFyZ2luLWxlZnQ6MTJweDsgYmFja2dyb3VuZDp0cmFuc3BhcmVudDsgYm9yZGVyOjA7IGZvbnQtc2l6ZToxOHB4OyBjdXJzb3I6cG9pbnRlcjsgcGFkZGluZzo4cHg7IGJvcmRlci1yYWRpdXM6OHB4fVxcclxcbi50aGVtZS10b2dnbGU6Zm9jdXN7b3V0bGluZTozcHggc29saWQgcmdiYSgxMSwxMDcsMjU1LDAuMTIpfVxcclxcblxcclxcbi8qIE1vZGFsICovXFxyXFxuLm1vZGFse3Bvc2l0aW9uOmZpeGVkOyBpbnNldDowOyBkaXNwbGF5Om5vbmU7IGFsaWduLWl0ZW1zOmNlbnRlcjsganVzdGlmeS1jb250ZW50OmNlbnRlcjsgYmFja2dyb3VuZDpyZ2JhKDUsMTAsMTgsMC41NSk7IHotaW5kZXg6MTQwMH1cXHJcXG4ubW9kYWwuYWN0aXZle2Rpc3BsYXk6ZmxleH1cXHJcXG4ubW9kYWwgLmZyYW1le2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7IG1heC13aWR0aDoxMTAwcHg7IHdpZHRoOmNhbGMoMTAwJSAtIDQ4cHgpOyBib3JkZXItcmFkaXVzOjEycHg7IHBvc2l0aW9uOnJlbGF0aXZlfVxcclxcbi5tb2RhbC1tZWRpYXtiYWNrZ3JvdW5kOiMwNzEwMjE7IGJvcmRlci1yYWRpdXM6MTJweDsgb3ZlcmZsb3c6aGlkZGVufVxcclxcbi5tb2RhbC1tZWRpYSBpbWd7d2lkdGg6MTAwJTsgaGVpZ2h0OmF1dG87IGRpc3BsYXk6YmxvY2s7IG9iamVjdC1maXQ6Y292ZXJ9XFxyXFxuLm1vZGFsLWNhcHRpb257cGFkZGluZzoxNHB4OyBiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsIHJnYmEoMjU1LDI1NSwyNTUsMC45OCksIHJnYmEoMjU1LDI1NSwyNTUsMC45NikpOyBib3JkZXItcmFkaXVzOjAgMCAxMnB4IDEycHg7IGNvbG9yOnZhcigtLWFjY2VudC0yKX1cXHJcXG4ubW9kYWwtY2xvc2V7cG9zaXRpb246YWJzb2x1dGU7IHJpZ2h0OjhweDsgdG9wOjhweDsgYmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LDAuOSk7IGJvcmRlcjowOyBwYWRkaW5nOjhweCAxMHB4OyBib3JkZXItcmFkaXVzOjhweDsgY3Vyc29yOnBvaW50ZXJ9XFxyXFxuXFxyXFxuLyogSGVybyB3aXRoIGJhY2tncm91bmQgbWVkaWEgcGxhY2Vob2xkZXIgKi9cXHJcXG4uaGVyb3twb3NpdGlvbjpyZWxhdGl2ZTsgb3ZlcmZsb3c6dmlzaWJsZX1cXHJcXG4uaGVybzo6YmVmb3Jle2NvbnRlbnQ6Jyc7IHBvc2l0aW9uOmFic29sdXRlOyBpbnNldDowOyB6LWluZGV4Oi0xOyBiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsIHJnYmEoNiwxMSwyMCwwLjA0KSwgcmdiYSgyNTUsMjU1LDI1NSwwKSk7IHBvaW50ZXItZXZlbnRzOm5vbmV9XFxyXFxuLmhlcm8tbWVkaWF7cG9zaXRpb246YWJzb2x1dGU7IHJpZ2h0OjA7IHRvcDowOyB3aWR0aDo0NiU7IGhlaWdodDoxMDAlOyBib3JkZXItcmFkaXVzOjEycHg7IG92ZXJmbG93OmhpZGRlbjsgZmlsdGVyOmNvbnRyYXN0KDEwNSUpIHNhdHVyYXRlKDEwNSUpOyBvcGFjaXR5OjAuOTV9XFxyXFxuLmhlcm8tbWVkaWEgaW1nLCAuaGVyby1tZWRpYSB2aWRlb3t3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTsgb2JqZWN0LWZpdDpjb3ZlcjsgZGlzcGxheTpibG9ja31cXHJcXG5cXHJcXG4vKiBFZGl0b3JpYWwgc3BhY2luZyAqL1xcclxcbi53cmFwe21heC13aWR0aDoxMjAwcHg7IG1hcmdpbjo0MHB4IGF1dG87IHBhZGRpbmc6MjhweH1cXHJcXG4uaGVyby1jYXJke3BhZGRpbmc6NDhweH1cXHJcXG4uaGVyby10aXRsZXtmb250LXNpemU6NTJweH1cXHJcXG4ubGVhZHtmb250LXNpemU6MjBweDsgbWF4LXdpZHRoOjcwY2h9XFxyXFxuXFxyXFxuLyogQ3Vyc29yIHRyYWNraW5nIGFjY2VudCAoc3VidGxlKSAqL1xcclxcbi5jdXJzb3ItYWNjZW50e3Bvc2l0aW9uOmZpeGVkOyBwb2ludGVyLWV2ZW50czpub25lOyB3aWR0aDoyMjBweDsgaGVpZ2h0OjIyMHB4OyBib3JkZXItcmFkaXVzOjIwcHg7IG1peC1ibGVuZC1tb2RlOm11bHRpcGx5OyB0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSkgc2NhbGUoMC4xOCk7IHRyYW5zaXRpb246dHJhbnNmb3JtIC4yOHMgZWFzZSwgb3BhY2l0eSAuNHMgZWFzZTsgb3BhY2l0eTowfVxcclxcbi5jdXJzb3ItYWNjZW50LnNob3d7b3BhY2l0eTowLjk1fVxcclxcblxcclxcbkBtZWRpYSAobWF4LXdpZHRoOjk4MHB4KXtcXHJcXG4gIC5oZXJvLW1lZGlhe2Rpc3BsYXk6bm9uZX1cXHJcXG4gIC5oZXJve2dyaWQtdGVtcGxhdGUtY29sdW1uczoxZnJ9XFxyXFxuICAuaGVyby10aXRsZXtmb250LXNpemU6MzRweH1cXHJcXG59XFxyXFxuLyogPT09PT0gRXhwZXJpZW5jaWEgbGFib3JhbCA9PT09PSAqL1xcclxcbi54cC1saXN0IHtcXHJcXG4gIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICBnYXA6IDFyZW07XFxyXFxuICBtYXJnaW4tdG9wOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4ueHAge1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7XFxyXFxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1yYWRpdXMpO1xcclxcbiAgcGFkZGluZzogMS41cmVtO1xcclxcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XFxyXFxufVxcclxcbi54cDpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC4wMik7IH1cXHJcXG5cXHJcXG4ueHAtaGVhZGVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LXdyYXA6IHdyYXA7XFxyXFxuICBnYXA6IDhweCAxMnB4O1xcclxcbiAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbn1cXHJcXG5cXHJcXG4ueHAtdGl0bGUgeyBmb250LXdlaWdodDogNzAwOyB9XFxyXFxuLnhwLWJvZHkgeyBtYXJnaW46IDhweCAwIDAgMThweDsgfVxcclxcbi54cC1ib2R5IGxpIHsgbWFyZ2luLWJvdHRvbTogNnB4OyB9XFxyXFxuXFxyXFxuLyogVmFyaWFudGUg4oCcbMOtbmVhIGRlIHRpZW1wb+KAnSAoYWN0w612YWxhIGHDsWFkaWVuZG8gY2xhc3M9XFxcInJldmVhbCB0aW1lbGluZVxcXCIgYWwgc2VjdGlvbiNleHBlcmllbmNpYSkgKi9cXHJcXG4jZXhwZXJpZW5jaWEudGltZWxpbmUgLnhwLWxpc3QgeyBcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgXFxyXFxuICBwYWRkaW5nLWxlZnQ6IDE4cHg7IFxcclxcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCBjdXJyZW50Q29sb3I7IFxcclxcbiAgb3BhY2l0eTogLjk7XFxyXFxufVxcclxcbiNleHBlcmllbmNpYS50aW1lbGluZSAueHAgeyBwb3NpdGlvbjogcmVsYXRpdmU7IH1cXHJcXG4jZXhwZXJpZW5jaWEudGltZWxpbmUgLnhwOjpiZWZvcmUge1xcclxcbiAgY29udGVudDogXFxcIlxcXCI7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBsZWZ0OiAtMTBweDtcXHJcXG4gIHRvcDogMThweDtcXHJcXG4gIHdpZHRoOiAxMnB4OyBoZWlnaHQ6IDEycHg7IGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcXHJcXG4gIG9wYWNpdHk6IC45O1xcclxcbn1cXHJcXG5cXHJcXG46cm9vdFtkYXRhLXRoZW1lPVxcXCJkYXJrXFxcIl0gLnhwIHtcXHJcXG4gIGJvcmRlci1jb2xvcjogdmFyKC0tY29sb3ItbmV1dHJhbC1saWdodCk7XFxyXFxufVxcclxcbjpyb290W2RhdGEtdGhlbWU9XFxcImRhcmtcXFwiXSAueHA6aG92ZXIge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjAzKTtcXHJcXG59XFxyXFxuOnJvb3RbZGF0YS10aGVtZT1cXFwiZGFya1xcXCJdICNleHBlcmllbmNpYS50aW1lbGluZSAueHAtbGlzdCB7XFxyXFxuICBib3JkZXItbGVmdC1jb2xvcjogdmFyKC0tY29sb3ItbmV1dHJhbC1kYXJrKTtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./style.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./style.css":
/*!*******************!*\
  !*** ./style.css ***!
  \*******************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./style.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./style.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./style.css\",\n      function () {\n        content = __webpack_require__(/*! !!./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./style.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[14].use[2]!./style.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZS5jc3MiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLG1OQUF1RztBQUN6SCwwQkFBMEIsbUJBQU8sQ0FBQyw4ZEFBNk87O0FBRS9ROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSw4ZEFBNk87QUFDblA7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyw4ZEFBNk87O0FBRXZROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlLmNzcz9lYjY5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTRdLnVzZVsxXSEuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxNF0udXNlWzJdIS4vc3R5bGUuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBCeSBkZWZhdWx0LCBzdHlsZS1sb2FkZXIgaW5qZWN0cyBDU1MgaW50byB0aGUgYm90dG9tXG4gICAgICAgICAgICAgICAgICAgIC8vIG9mIDxoZWFkPi4gVGhpcyBjYXVzZXMgb3JkZXJpbmcgcHJvYmxlbXMgYmV0d2VlbiBkZXZcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIHByb2QuIFRvIGZpeCB0aGlzLCB3ZSByZW5kZXIgYSA8bm9zY3JpcHQ+IHRhZyBhc1xuICAgICAgICAgICAgICAgICAgICAvLyBhbiBhbmNob3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgcGxhY2VkIGJlZm9yZS4gVGhlc2VcbiAgICAgICAgICAgICAgICAgICAgLy8gc3R5bGVzIHdpbGwgYmUgYXBwbGllZCBfYmVmb3JlXyA8c3R5bGUganN4IGdsb2JhbD4uXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNfX25leHRfY3NzX19ET19OT1RfVVNFX19cIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgICAgICAgICAgLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAgICAgLy8gbmVlZCB0byB0cmFjayB0aGUgbGFzdCBpbnNlcnRlZCBlbGVtZW50LlxuICAgICAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LCBhbmNob3JFbGVtZW50KTtcbiAgICAgICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFbcF0gIT09IGJbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IocCBpbiBiKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYVtwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzE0XS51c2VbMV0hLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTRdLnVzZVsyXSEuL3N0eWxlLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxNF0udXNlWzFdIS4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzE0XS51c2VbMl0hLi9zdHlsZS5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./style.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MyApp; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../style.css */ \"./style.css\");\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_css__WEBPACK_IMPORTED_MODULE_1__);\n// Importa los estilos globales aqu√≠ para que se apliquen a todas las p√°ginas.\n\n\n// This default export is required in a new `pages/_app.js` file.\nfunction MyApp(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n        ...pageProps\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Yeison Gamba\\\\Desktop\\\\yekam97.github.io\\\\pages\\\\_app.js\",\n        lineNumber: 6,\n        columnNumber: 10\n    }, this);\n}\n_c = MyApp;\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsOEVBQThFOztBQUN4RDtBQUV0QixpRUFBaUU7QUFDbEQsU0FBU0EsTUFBTSxLQUF3QjtRQUF4QixFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRSxHQUF4QjtJQUM1QixxQkFBTyw4REFBQ0Q7UUFBVyxHQUFHQyxTQUFTOzs7Ozs7QUFDakM7S0FGd0JGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL19hcHAuanM/ZTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRhIGxvcyBlc3RpbG9zIGdsb2JhbGVzIGFxdcOtIHBhcmEgcXVlIHNlIGFwbGlxdWVuIGEgdG9kYXMgbGFzIHDDoWdpbmFzLlxyXG5pbXBvcnQgJy4uL3N0eWxlLmNzcyc7XHJcblxyXG4vLyBUaGlzIGRlZmF1bHQgZXhwb3J0IGlzIHJlcXVpcmVkIGluIGEgbmV3IGBwYWdlcy9fYXBwLmpzYCBmaWxlLlxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH0pIHtcclxuICByZXR1cm4gPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPjtcclxufSJdLCJuYW1lcyI6WyJNeUFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\r\n * @license React\r\n * react-jsx-dev-runtime.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n\r\nif (true) {\r\n  (function() {\r\n'use strict';\r\n\r\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n// The Symbol used to tag the ReactElement-like types.\r\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\r\nfunction getIteratorFn(maybeIterable) {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n\r\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nfunction error(format) {\r\n  {\r\n    {\r\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n        args[_key2 - 1] = arguments[_key2];\r\n      }\r\n\r\n      printWarning('error', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  {\r\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n\r\n    if (stack !== '') {\r\n      format += '%s';\r\n      args = args.concat([stack]);\r\n    } // eslint-disable-next-line react-internal/safe-string-coercion\r\n\r\n\r\n    var argsWithFormat = args.map(function (item) {\r\n      return String(item);\r\n    }); // Careful: RN currently depends on this prefix\r\n\r\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n\r\n// -----------------------------------------------------------------------------\r\n\r\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\r\nvar enableCacheElement = false;\r\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\r\n\r\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\r\n// stuff. Intended to enable React core members to more easily debug scheduling\r\n// issues in DEV builds.\r\n\r\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\r\n\r\nvar REACT_MODULE_REFERENCE;\r\n\r\n{\r\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n}\r\n\r\nfunction isValidElementType(type) {\r\n  if (typeof type === 'string' || typeof type === 'function') {\r\n    return true;\r\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\r\n\r\n\r\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type === 'object' && type !== null) {\r\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\r\n    // types supported by any Flight configuration anywhere since\r\n    // we don't know which Flight build this will end up being used\r\n    // with.\r\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction getWrappedName(outerType, innerType, wrapperName) {\r\n  var displayName = outerType.displayName;\r\n\r\n  if (displayName) {\r\n    return displayName;\r\n  }\r\n\r\n  var functionName = innerType.displayName || innerType.name || '';\r\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\r\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\r\n\r\n\r\nfunction getContextName(type) {\r\n  return type.displayName || 'Context';\r\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\r\n\r\n\r\nfunction getComponentNameFromType(type) {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n\r\n  {\r\n    if (typeof type.tag === 'number') {\r\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n\r\n  if (typeof type === 'function') {\r\n    return type.displayName || type.name || null;\r\n  }\r\n\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n\r\n  switch (type) {\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return 'SuspenseList';\r\n\r\n  }\r\n\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        var context = type;\r\n        return getContextName(context) + '.Consumer';\r\n\r\n      case REACT_PROVIDER_TYPE:\r\n        var provider = type;\r\n        return getContextName(provider._context) + '.Provider';\r\n\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n\r\n      case REACT_MEMO_TYPE:\r\n        var outerName = type.displayName || null;\r\n\r\n        if (outerName !== null) {\r\n          return outerName;\r\n        }\r\n\r\n        return getComponentNameFromType(type.type) || 'Memo';\r\n\r\n      case REACT_LAZY_TYPE:\r\n        {\r\n          var lazyComponent = type;\r\n          var payload = lazyComponent._payload;\r\n          var init = lazyComponent._init;\r\n\r\n          try {\r\n            return getComponentNameFromType(init(payload));\r\n          } catch (x) {\r\n            return null;\r\n          }\r\n        }\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nvar assign = Object.assign;\r\n\r\n// Helpers to patch console.logs to avoid logging during side-effect free\r\n// replaying on render function. This currently only patches the object\r\n// lazily which won't cover if the log function was extracted eagerly.\r\n// We could also eagerly patch the method.\r\nvar disabledDepth = 0;\r\nvar prevLog;\r\nvar prevInfo;\r\nvar prevWarn;\r\nvar prevError;\r\nvar prevGroup;\r\nvar prevGroupCollapsed;\r\nvar prevGroupEnd;\r\n\r\nfunction disabledLog() {}\r\n\r\ndisabledLog.__reactDisabledLog = true;\r\nfunction disableLogs() {\r\n  {\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      prevLog = console.log;\r\n      prevInfo = console.info;\r\n      prevWarn = console.warn;\r\n      prevError = console.error;\r\n      prevGroup = console.group;\r\n      prevGroupCollapsed = console.groupCollapsed;\r\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\r\n\r\n      var props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: disabledLog,\r\n        writable: true\r\n      }; // $FlowFixMe Flow thinks console is immutable.\r\n\r\n      Object.defineProperties(console, {\r\n        info: props,\r\n        log: props,\r\n        warn: props,\r\n        error: props,\r\n        group: props,\r\n        groupCollapsed: props,\r\n        groupEnd: props\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n\r\n    disabledDepth++;\r\n  }\r\n}\r\nfunction reenableLogs() {\r\n  {\r\n    disabledDepth--;\r\n\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      var props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true\r\n      }; // $FlowFixMe Flow thinks console is immutable.\r\n\r\n      Object.defineProperties(console, {\r\n        log: assign({}, props, {\r\n          value: prevLog\r\n        }),\r\n        info: assign({}, props, {\r\n          value: prevInfo\r\n        }),\r\n        warn: assign({}, props, {\r\n          value: prevWarn\r\n        }),\r\n        error: assign({}, props, {\r\n          value: prevError\r\n        }),\r\n        group: assign({}, props, {\r\n          value: prevGroup\r\n        }),\r\n        groupCollapsed: assign({}, props, {\r\n          value: prevGroupCollapsed\r\n        }),\r\n        groupEnd: assign({}, props, {\r\n          value: prevGroupEnd\r\n        })\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n\r\n    if (disabledDepth < 0) {\r\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n}\r\n\r\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\r\nvar prefix;\r\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\r\n  {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = match && match[1] || '';\r\n      }\r\n    } // We use the prefix to ensure our stacks line up with native stack frames.\r\n\r\n\r\n    return '\\n' + prefix + name;\r\n  }\r\n}\r\nvar reentry = false;\r\nvar componentFrameCache;\r\n\r\n{\r\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nfunction describeNativeComponentFrame(fn, construct) {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if ( !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  {\r\n    var frame = componentFrameCache.get(fn);\r\n\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  var control;\r\n  reentry = true;\r\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\r\n\r\n  Error.prepareStackTrace = undefined;\r\n  var previousDispatcher;\r\n\r\n  {\r\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      var Fake = function () {\r\n        throw Error();\r\n      }; // $FlowFixMe\r\n\r\n\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function () {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        }\r\n      });\r\n\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      var sampleLines = sample.stack.split('\\n');\r\n      var controlLines = control.stack.split('\\n');\r\n      var s = sampleLines.length - 1;\r\n      var c = controlLines.length - 1;\r\n\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--; // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n\r\n\r\n                if (fn.displayName && _frame.includes('<anonymous>')) {\r\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, _frame);\r\n                  }\r\n                } // Return the line we found.\r\n\r\n\r\n                return _frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n\r\n    {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  } // Fallback to just using the name if we couldn't make it throw.\r\n\r\n\r\n  var name = fn ? fn.displayName || fn.name : '';\r\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n\r\n  {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n\r\n  return syntheticFrame;\r\n}\r\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\r\n  {\r\n    return describeNativeComponentFrame(fn, false);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component) {\r\n  var prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\r\n\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n\r\n  if (typeof type === 'function') {\r\n    {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    }\r\n  }\r\n\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type);\r\n  }\r\n\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense');\r\n\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList');\r\n  }\r\n\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render);\r\n\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n\r\n      case REACT_LAZY_TYPE:\r\n        {\r\n          var lazyComponent = type;\r\n          var payload = lazyComponent._payload;\r\n          var init = lazyComponent._init;\r\n\r\n          try {\r\n            // Lazy may contain any component type so we recursively resolve it.\r\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\r\n          } catch (x) {}\r\n        }\r\n    }\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nvar loggedTypeFailures = {};\r\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  {\r\n    if (element) {\r\n      var owner = element._owner;\r\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\r\n  {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    var has = Function.call.bind(hasOwnProperty);\r\n\r\n    for (var typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n\r\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\r\n        } catch (ex) {\r\n          error$1 = ex;\r\n        }\r\n\r\n        if (error$1 && !(error$1 instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n\r\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\r\n\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n\r\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error$1.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n\r\n          error('Failed %s type: %s', location, error$1.message);\r\n\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\r\n\r\nfunction isArray(a) {\r\n  return isArrayImpl(a);\r\n}\r\n\r\n/*\r\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\r\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\r\n *\r\n * The functions in this module will throw an easier-to-understand,\r\n * easier-to-debug exception with a clear errors message message explaining the\r\n * problem. (Instead of a confusing exception thrown inside the implementation\r\n * of the `value` object).\r\n */\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction typeName(value) {\r\n  {\r\n    // toStringTag is needed for namespaced types like Temporal.Instant\r\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\r\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\r\n    return type;\r\n  }\r\n} // $FlowFixMe only called in DEV, so void return is not possible.\r\n\r\n\r\nfunction willCoercionThrow(value) {\r\n  {\r\n    try {\r\n      testStringCoercion(value);\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction testStringCoercion(value) {\r\n  // If you ended up here by following an exception call stack, here's what's\r\n  // happened: you supplied an object or symbol value to React (as a prop, key,\r\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\r\n  // coerce it to a string using `'' + value`, an exception was thrown.\r\n  //\r\n  // The most common types that will cause this exception are `Symbol` instances\r\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\r\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\r\n  // exception. (Library authors do this to prevent users from using built-in\r\n  // numeric operators like `+` or comparison operators like `>=` because custom\r\n  // methods are needed to perform accurate arithmetic or comparison.)\r\n  //\r\n  // To fix the problem, coerce this object or symbol value to a string before\r\n  // passing it to React. The most reliable way is usually `String(value)`.\r\n  //\r\n  // To find which value is throwing, check the browser or debugger console.\r\n  // Before this exception was thrown, there should be `console.error` output\r\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\r\n  // problem and how that type was used: key, atrribute, input value prop, etc.\r\n  // In most cases, this console output also shows the component and its\r\n  // ancestor components where the exception happened.\r\n  //\r\n  // eslint-disable-next-line react-internal/safe-string-coercion\r\n  return '' + value;\r\n}\r\nfunction checkKeyStringCoercion(value) {\r\n  {\r\n    if (willCoercionThrow(value)) {\r\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\r\n\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nvar RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true\r\n};\r\nvar specialPropKeyWarningShown;\r\nvar specialPropRefWarningShown;\r\nvar didWarnAboutStringRefs;\r\n\r\n{\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\r\n  {\r\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\r\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\r\n\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  {\r\n    var warnAboutAccessingKey = function () {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n\r\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\r\n      }\r\n    };\r\n\r\n    warnAboutAccessingKey.isReactWarning = true;\r\n    Object.defineProperty(props, 'key', {\r\n      get: warnAboutAccessingKey,\r\n      configurable: true\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  {\r\n    var warnAboutAccessingRef = function () {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n\r\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\r\n      }\r\n    };\r\n\r\n    warnAboutAccessingRef.isReactWarning = true;\r\n    Object.defineProperty(props, 'ref', {\r\n      get: warnAboutAccessingRef,\r\n      configurable: true\r\n    });\r\n  }\r\n}\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\n\r\n\r\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\r\n  var element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner\r\n  };\r\n\r\n  {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false\r\n    }); // self and source are DEV only properties.\r\n\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self\r\n    }); // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source\r\n    });\r\n\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\n\r\nfunction jsxDEV(type, config, maybeKey, source, self) {\r\n  {\r\n    var propName; // Reserved names are extracted\r\n\r\n    var props = {};\r\n    var key = null;\r\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\r\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n    // but as an intermediary step, we will use jsxDEV for everything except\r\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n    // key is explicitly declared to be undefined or not.\r\n\r\n    if (maybeKey !== undefined) {\r\n      {\r\n        checkKeyStringCoercion(maybeKey);\r\n      }\r\n\r\n      key = '' + maybeKey;\r\n    }\r\n\r\n    if (hasValidKey(config)) {\r\n      {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n\r\n      key = '' + config.key;\r\n    }\r\n\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n      warnIfStringRefCannotBeAutoConverted(config, self);\r\n    } // Remaining properties are added to a new props object\r\n\r\n\r\n    for (propName in config) {\r\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\r\n        props[propName] = config[propName];\r\n      }\r\n    } // Resolve default props\r\n\r\n\r\n    if (type && type.defaultProps) {\r\n      var defaultProps = type.defaultProps;\r\n\r\n      for (propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n          props[propName] = defaultProps[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (key || ref) {\r\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\r\n\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n\r\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\r\n  }\r\n}\r\n\r\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\r\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement$1(element) {\r\n  {\r\n    if (element) {\r\n      var owner = element._owner;\r\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\r\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nvar propTypesMisspellWarningShown;\r\n\r\n{\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\n\r\n\r\nfunction isValidElement(object) {\r\n  {\r\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\r\n  }\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  {\r\n    if (ReactCurrentOwner$1.current) {\r\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\r\n\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  {\r\n    if (source !== undefined) {\r\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      var lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\n\r\n\r\nvar ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  {\r\n    var info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\r\n\r\n      if (parentName) {\r\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n}\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\n\r\n\r\nfunction validateExplicitKey(element, parentType) {\r\n  {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n\r\n    element._store.validated = true;\r\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n\r\n    var childOwner = '';\r\n\r\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\r\n      // Give the component that originally created this child.\r\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\r\n    }\r\n\r\n    setCurrentlyValidatingElement$1(element);\r\n\r\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\r\n\r\n    setCurrentlyValidatingElement$1(null);\r\n  }\r\n}\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\n\r\n\r\nfunction validateChildKeys(node, parentType) {\r\n  {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n\r\n    if (isArray(node)) {\r\n      for (var i = 0; i < node.length; i++) {\r\n        var child = node[i];\r\n\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      var iteratorFn = getIteratorFn(node);\r\n\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          var iterator = iteratorFn.call(node);\r\n          var step;\r\n\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\n\r\n\r\nfunction validatePropTypes(element) {\r\n  {\r\n    var type = element.type;\r\n\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n\r\n    var propTypes;\r\n\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\r\n    // Inner props are checked in the reconciler.\r\n    type.$$typeof === REACT_MEMO_TYPE)) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      var name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\r\n\r\n      var _name = getComponentNameFromType(type);\r\n\r\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\r\n    }\r\n\r\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\r\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\r\n    }\r\n  }\r\n}\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\n\r\n\r\nfunction validateFragmentProps(fragment) {\r\n  {\r\n    var keys = Object.keys(fragment.props);\r\n\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i];\r\n\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement$1(fragment);\r\n\r\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\r\n\r\n        setCurrentlyValidatingElement$1(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement$1(fragment);\r\n\r\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n\r\n      setCurrentlyValidatingElement$1(null);\r\n    }\r\n  }\r\n}\r\n\r\nvar didWarnAboutKeySpread = {};\r\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\r\n  {\r\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n\r\n    if (!validType) {\r\n      var info = '';\r\n\r\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\r\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      var sourceInfo = getSourceInfoErrorAddendum(source);\r\n\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      var typeString;\r\n\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\r\n        info = ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\r\n    }\r\n\r\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n\r\n    if (element == null) {\r\n      return element;\r\n    } // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n\r\n\r\n    if (validType) {\r\n      var children = props.children;\r\n\r\n      if (children !== undefined) {\r\n        if (isStaticChildren) {\r\n          if (isArray(children)) {\r\n            for (var i = 0; i < children.length; i++) {\r\n              validateChildKeys(children[i], type);\r\n            }\r\n\r\n            if (Object.freeze) {\r\n              Object.freeze(children);\r\n            }\r\n          } else {\r\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\r\n          }\r\n        } else {\r\n          validateChildKeys(children, type);\r\n        }\r\n      }\r\n    }\r\n\r\n    {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        var componentName = getComponentNameFromType(type);\r\n        var keys = Object.keys(props).filter(function (k) {\r\n          return k !== 'key';\r\n        });\r\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\r\n\r\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\r\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\r\n\r\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\r\n\r\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n} // These two functions exist to still get child warnings in dev\r\n\r\nvar jsxDEV$1 =  jsxWithValidation ;\r\n\r\nexports.Fragment = REACT_FRAGMENT_TYPE;\r\nexports.jsxDEV = jsxDEV$1;\r\n  })();\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nif (false) {} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsdUpBQXNFO0FBQ3hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/NTc3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);